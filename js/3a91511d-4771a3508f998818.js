!function(){try{var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},t=Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="e2770d5e-735f-4544-91e0-ea782f6f21e1",e._sentryDebugIdIdentifier="sentry-dbid-e2770d5e-735f-4544-91e0-ea782f6f21e1")}catch(e){}}();"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3814],{45429:function(e,t,r){r.d(t,{EC:function(){return V},GS:function(){return Z},Wf:function(){return ry},YW:function(){return Q},eT:function(){return W},ew:function(){return t9},nh:function(){return T}});var n,i,s=r(9109),a=r(2552),o=r(58171),c=r.n(o),l=r(88443),u=r.n(l),d=r(65530),h=r(5810),g=r(24459),p=r(12653),b=r(66517),m=r(4531),y=r.n(m),f=r(92290),k=r(35743),w=r(90666);a.UN.utils.randomPrivateKey;let S=()=>{let e=a.UN.utils.randomPrivateKey(),t=_(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),{publicKey:t,secretKey:r}},_=a.UN.getPublicKey;function I(e){try{return a.UN.ExtendedPoint.fromHex(e),!0}catch{return!1}}let A=(e,t)=>a.UN.sign(e,t.slice(0,32)),v=a.UN.verify,B=e=>s.Buffer.isBuffer(e)?e:e instanceof Uint8Array?s.Buffer.from(e.buffer,e.byteOffset,e.byteLength):s.Buffer.from(e);class x{constructor(e){Object.assign(this,e)}encode(){return s.Buffer.from((0,h.serialize)(P,this))}static decode(e){return(0,h.deserialize)(P,this,e)}static decodeUnchecked(e){return(0,h.deserializeUnchecked)(P,this,e)}}let P=new Map,E=1;class T extends x{constructor(e){if(super({}),this._bn=void 0,void 0!==e._bn)this._bn=e._bn;else{if("string"==typeof e){let t=u().decode(e);if(32!=t.length)throw Error("Invalid public key input");this._bn=new(c())(t)}else this._bn=new(c())(e);if(this._bn.byteLength()>32)throw Error("Invalid public key input")}}static unique(){let e=new T(E);return E+=1,new T(e.toBuffer())}equals(e){return this._bn.eq(e._bn)}toBase58(){return u().encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){let e=this.toBuffer();return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}toBuffer(){let e=this._bn.toArrayLike(s.Buffer);if(32===e.length)return e;let t=s.Buffer.alloc(32);return e.copy(t,32-e.length),t}get[Symbol.toStringTag](){return`PublicKey(${this.toString()})`}toString(){return this.toBase58()}static async createWithSeed(e,t,r){let n=s.Buffer.concat([e.toBuffer(),s.Buffer.from(t),r.toBuffer()]);return new T((0,d.J)(n))}static createProgramAddressSync(e,t){let r=s.Buffer.alloc(0);e.forEach(function(e){if(e.length>32)throw TypeError("Max seed length exceeded");r=s.Buffer.concat([r,B(e)])}),r=s.Buffer.concat([r,t.toBuffer(),s.Buffer.from("ProgramDerivedAddress")]);let n=(0,d.J)(r);if(I(n))throw Error("Invalid seeds, address must fall off the curve");return new T(n)}static async createProgramAddress(e,t){return this.createProgramAddressSync(e,t)}static findProgramAddressSync(e,t){let r,n=255;for(;0!=n;){try{let i=e.concat(s.Buffer.from([n]));r=this.createProgramAddressSync(i,t)}catch(e){if(e instanceof TypeError)throw e;n--;continue}return[r,n]}throw Error("Unable to find a viable program address nonce")}static async findProgramAddress(e,t){return this.findProgramAddressSync(e,t)}static isOnCurve(e){return I(new T(e).toBytes())}}T.default=new T("11111111111111111111111111111111"),P.set(T,{kind:"struct",fields:[["_bn","u256"]]}),new T("BPFLoader1111111111111111111111111111111111");let W=64;class C extends Error{constructor(e){super(`Signature ${e} has expired: block height exceeded.`),this.signature=void 0,this.signature=e}}Object.defineProperty(C.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class q extends Error{constructor(e,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${e} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=e}}Object.defineProperty(q.prototype,"name",{value:"TransactionExpiredTimeoutError"});class L extends Error{constructor(e){super(`Signature ${e} has expired: the nonce is no longer valid.`),this.signature=void 0,this.signature=e}}Object.defineProperty(L.prototype,"name",{value:"TransactionExpiredNonceInvalidError"});class R{constructor(e,t){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=e,this.accountKeysFromLookups=t}keySegments(){let e=[this.staticAccountKeys];return this.accountKeysFromLookups&&(e.push(this.accountKeysFromLookups.writable),e.push(this.accountKeysFromLookups.readonly)),e}get(e){for(let t of this.keySegments()){if(e<t.length)return t[e];e-=t.length}}get length(){return this.keySegments().flat().length}compileInstructions(e){if(this.length>256)throw Error("Account index overflow encountered during compilation");let t=new Map;this.keySegments().flat().forEach((e,r)=>{t.set(e.toBase58(),r)});let r=e=>{let r=t.get(e.toBase58());if(void 0===r)throw Error("Encountered an unknown instruction account key during compilation");return r};return e.map(e=>({programIdIndex:r(e.programId),accountKeyIndexes:e.keys.map(e=>r(e.pubkey)),data:e.data}))}}let z=(e="publicKey")=>g.Ik(32,e),K=(e="signature")=>g.Ik(64,e),O=(e="string")=>{let t=g.n_([g.Jq("length"),g.Jq("lengthPadding"),g.Ik(g.cv(g.Jq(),-8),"chars")],e),r=t.decode.bind(t),n=t.encode.bind(t);return t.decode=(e,t)=>r(e,t).chars.toString(),t.encode=(e,t,r)=>n({chars:s.Buffer.from(e,"utf8")},t,r),t.alloc=e=>g.Jq().span+g.Jq().span+s.Buffer.from(e,"utf8").length,t};function N(e){let t=0,r=0;for(;;){let n=e.shift();if(t|=(127&n)<<7*r,r+=1,(128&n)==0)break}return t}function M(e,t){let r=t;for(;;){let t=127&r;if(0==(r>>=7)){e.push(t);break}t|=128,e.push(t)}}function J(e,t){if(!e)throw Error(t||"Assertion failed")}class U{constructor(e,t){this.payer=void 0,this.keyMetaMap=void 0,this.payer=e,this.keyMetaMap=t}static compile(e,t){let r=new Map,n=e=>{let t=e.toBase58(),n=r.get(t);return void 0===n&&(n={isSigner:!1,isWritable:!1,isInvoked:!1},r.set(t,n)),n},i=n(t);for(let t of(i.isSigner=!0,i.isWritable=!0,e))for(let e of(n(t.programId).isInvoked=!0,t.keys)){let t=n(e.pubkey);t.isSigner||=e.isSigner,t.isWritable||=e.isWritable}return new U(t,r)}getMessageComponents(){let e=[...this.keyMetaMap.entries()];J(e.length<=256,"Max static account keys length exceeded");let t=e.filter(([,e])=>e.isSigner&&e.isWritable),r=e.filter(([,e])=>e.isSigner&&!e.isWritable),n=e.filter(([,e])=>!e.isSigner&&e.isWritable),i=e.filter(([,e])=>!e.isSigner&&!e.isWritable),s={numRequiredSignatures:t.length+r.length,numReadonlySignedAccounts:r.length,numReadonlyUnsignedAccounts:i.length};{J(t.length>0,"Expected at least one writable signer key");let[e]=t[0];J(e===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}return[s,[...t.map(([e])=>new T(e)),...r.map(([e])=>new T(e)),...n.map(([e])=>new T(e)),...i.map(([e])=>new T(e))]]}extractTableLookup(e){let[t,r]=this.drainKeysFoundInLookupTable(e.state.addresses,e=>!e.isSigner&&!e.isInvoked&&e.isWritable),[n,i]=this.drainKeysFoundInLookupTable(e.state.addresses,e=>!e.isSigner&&!e.isInvoked&&!e.isWritable);if(0!==t.length||0!==n.length)return[{accountKey:e.key,writableIndexes:t,readonlyIndexes:n},{writable:r,readonly:i}]}drainKeysFoundInLookupTable(e,t){let r=[],n=[];for(let[i,s]of this.keyMetaMap.entries())if(t(s)){let t=new T(i),s=e.findIndex(e=>e.equals(t));s>=0&&(J(s<256,"Max lookup table index exceeded"),r.push(s),n.push(t),this.keyMetaMap.delete(i))}return[r,n]}}let $="Reached end of buffer unexpectedly";function H(e){if(0===e.length)throw Error($);return e.shift()}function F(e,...t){let[r]=t;if(2===t.length?r+(t[1]??0)>e.length:r>=e.length)throw Error($);return e.splice(...t)}class D{constructor(e){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=e.header,this.accountKeys=e.accountKeys.map(e=>new T(e)),this.recentBlockhash=e.recentBlockhash,this.instructions=e.instructions,this.instructions.forEach(e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex]))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map(e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:u().decode(e.data)}))}get addressTableLookups(){return[]}getAccountKeys(){return new R(this.staticAccountKeys)}static compile(e){let[t,r]=U.compile(e.instructions,e.payerKey).getMessageComponents(),n=new R(r).compileInstructions(e.instructions).map(e=>({programIdIndex:e.programIdIndex,accounts:e.accountKeyIndexes,data:u().encode(e.data)}));return new D({header:t,accountKeys:r,recentBlockhash:e.recentBlockhash,instructions:n})}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){let t=this.header.numRequiredSignatures;if(!(e>=this.header.numRequiredSignatures))return e<t-this.header.numReadonlySignedAccounts;{let r=this.accountKeys.length-t-this.header.numReadonlyUnsignedAccounts;return e-t<r}}isProgramId(e){return this.indexToProgramIds.has(e)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter((e,t)=>!this.isProgramId(t))}serialize(){let e=this.accountKeys.length,t=[];M(t,e);let r=this.instructions.map(e=>{let{accounts:t,programIdIndex:r}=e,n=Array.from(u().decode(e.data)),i=[];M(i,t.length);let a=[];return M(a,n.length),{programIdIndex:r,keyIndicesCount:s.Buffer.from(i),keyIndices:t,dataLength:s.Buffer.from(a),data:n}}),n=[];M(n,r.length);let i=s.Buffer.alloc(1232);s.Buffer.from(n).copy(i);let a=n.length;r.forEach(e=>{let t=g.n_([g.u8("programIdIndex"),g.Ik(e.keyIndicesCount.length,"keyIndicesCount"),g.A9(g.u8("keyIndex"),e.keyIndices.length,"keyIndices"),g.Ik(e.dataLength.length,"dataLength"),g.A9(g.u8("userdatum"),e.data.length,"data")]).encode(e,i,a);a+=t}),i=i.slice(0,a);let o=g.n_([g.Ik(1,"numRequiredSignatures"),g.Ik(1,"numReadonlySignedAccounts"),g.Ik(1,"numReadonlyUnsignedAccounts"),g.Ik(t.length,"keyCount"),g.A9(z("key"),e,"keys"),z("recentBlockhash")]),c={numRequiredSignatures:s.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:s.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:s.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:s.Buffer.from(t),keys:this.accountKeys.map(e=>B(e.toBytes())),recentBlockhash:u().decode(this.recentBlockhash)},l=s.Buffer.alloc(2048),d=o.encode(c,l);return i.copy(l,d),l.slice(0,d+i.length)}static from(e){let t=[...e],r=H(t);if(r!==(127&r))throw Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");let n=H(t),i=H(t),a=N(t),o=[];for(let e=0;e<a;e++){let e=F(t,0,32);o.push(new T(s.Buffer.from(e)))}let c=F(t,0,32),l=N(t),d=[];for(let e=0;e<l;e++){let e=H(t),r=N(t),n=F(t,0,r),i=N(t),a=F(t,0,i),o=u().encode(s.Buffer.from(a));d.push({programIdIndex:e,accounts:n,data:o})}return new D({header:{numRequiredSignatures:r,numReadonlySignedAccounts:n,numReadonlyUnsignedAccounts:i},recentBlockhash:u().encode(s.Buffer.from(c)),accountKeys:o,instructions:d})}}class j{constructor(e){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=e.header,this.staticAccountKeys=e.staticAccountKeys,this.recentBlockhash=e.recentBlockhash,this.compiledInstructions=e.compiledInstructions,this.addressTableLookups=e.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let e=0;for(let t of this.addressTableLookups)e+=t.readonlyIndexes.length+t.writableIndexes.length;return e}getAccountKeys(e){let t;if(e&&"accountKeysFromLookups"in e&&e.accountKeysFromLookups){if(this.numAccountKeysFromLookups!=e.accountKeysFromLookups.writable.length+e.accountKeysFromLookups.readonly.length)throw Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");t=e.accountKeysFromLookups}else if(e&&"addressLookupTableAccounts"in e&&e.addressLookupTableAccounts)t=this.resolveAddressTableLookups(e.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw Error("Failed to get account keys because address table lookups were not resolved");return new R(this.staticAccountKeys,t)}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){let t=this.header.numRequiredSignatures,r=this.staticAccountKeys.length;if(e>=r)return e-r<this.addressTableLookups.reduce((e,t)=>e+t.writableIndexes.length,0);if(!(e>=this.header.numRequiredSignatures))return e<t-this.header.numReadonlySignedAccounts;{let n=r-t-this.header.numReadonlyUnsignedAccounts;return e-t<n}}resolveAddressTableLookups(e){let t={writable:[],readonly:[]};for(let r of this.addressTableLookups){let n=e.find(e=>e.key.equals(r.accountKey));if(!n)throw Error(`Failed to find address lookup table account for table key ${r.accountKey.toBase58()}`);for(let e of r.writableIndexes)if(e<n.state.addresses.length)t.writable.push(n.state.addresses[e]);else throw Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`);for(let e of r.readonlyIndexes)if(e<n.state.addresses.length)t.readonly.push(n.state.addresses[e]);else throw Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`)}return t}static compile(e){let t=U.compile(e.instructions,e.payerKey),r=[],n={writable:[],readonly:[]};for(let i of e.addressLookupTableAccounts||[]){let e=t.extractTableLookup(i);if(void 0!==e){let[t,{writable:i,readonly:s}]=e;r.push(t),n.writable.push(...i),n.readonly.push(...s)}}let[i,s]=t.getMessageComponents(),a=new R(s,n).compileInstructions(e.instructions);return new j({header:i,staticAccountKeys:s,recentBlockhash:e.recentBlockhash,compiledInstructions:a,addressTableLookups:r})}serialize(){let e=[];M(e,this.staticAccountKeys.length);let t=this.serializeInstructions(),r=[];M(r,this.compiledInstructions.length);let n=this.serializeAddressTableLookups(),i=[];M(i,this.addressTableLookups.length);let s=g.n_([g.u8("prefix"),g.n_([g.u8("numRequiredSignatures"),g.u8("numReadonlySignedAccounts"),g.u8("numReadonlyUnsignedAccounts")],"header"),g.Ik(e.length,"staticAccountKeysLength"),g.A9(z(),this.staticAccountKeys.length,"staticAccountKeys"),z("recentBlockhash"),g.Ik(r.length,"instructionsLength"),g.Ik(t.length,"serializedInstructions"),g.Ik(i.length,"addressTableLookupsLength"),g.Ik(n.length,"serializedAddressTableLookups")]),a=new Uint8Array(1232),o=s.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(e),staticAccountKeys:this.staticAccountKeys.map(e=>e.toBytes()),recentBlockhash:u().decode(this.recentBlockhash),instructionsLength:new Uint8Array(r),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(i),serializedAddressTableLookups:n},a);return a.slice(0,o)}serializeInstructions(){let e=0,t=new Uint8Array(1232);for(let r of this.compiledInstructions){let n=[];M(n,r.accountKeyIndexes.length);let i=[];M(i,r.data.length);let s=g.n_([g.u8("programIdIndex"),g.Ik(n.length,"encodedAccountKeyIndexesLength"),g.A9(g.u8(),r.accountKeyIndexes.length,"accountKeyIndexes"),g.Ik(i.length,"encodedDataLength"),g.Ik(r.data.length,"data")]);e+=s.encode({programIdIndex:r.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(n),accountKeyIndexes:r.accountKeyIndexes,encodedDataLength:new Uint8Array(i),data:r.data},t,e)}return t.slice(0,e)}serializeAddressTableLookups(){let e=0,t=new Uint8Array(1232);for(let r of this.addressTableLookups){let n=[];M(n,r.writableIndexes.length);let i=[];M(i,r.readonlyIndexes.length);let s=g.n_([z("accountKey"),g.Ik(n.length,"encodedWritableIndexesLength"),g.A9(g.u8(),r.writableIndexes.length,"writableIndexes"),g.Ik(i.length,"encodedReadonlyIndexesLength"),g.A9(g.u8(),r.readonlyIndexes.length,"readonlyIndexes")]);e+=s.encode({accountKey:r.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(n),writableIndexes:r.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(i),readonlyIndexes:r.readonlyIndexes},t,e)}return t.slice(0,e)}static deserialize(e){let t=[...e],r=H(t),n=127&r;J(r!==n,"Expected versioned message but received legacy message"),J(0===n,`Expected versioned message with version 0 but found version ${n}`);let i={numRequiredSignatures:H(t),numReadonlySignedAccounts:H(t),numReadonlyUnsignedAccounts:H(t)},s=[],a=N(t);for(let e=0;e<a;e++)s.push(new T(F(t,0,32)));let o=u().encode(F(t,0,32)),c=N(t),l=[];for(let e=0;e<c;e++){let e=H(t),r=N(t),n=F(t,0,r),i=N(t),s=new Uint8Array(F(t,0,i));l.push({programIdIndex:e,accountKeyIndexes:n,data:s})}let d=N(t),h=[];for(let e=0;e<d;e++){let e=new T(F(t,0,32)),r=N(t),n=F(t,0,r),i=N(t),s=F(t,0,i);h.push({accountKey:e,writableIndexes:n,readonlyIndexes:s})}return new j({header:i,staticAccountKeys:s,recentBlockhash:o,compiledInstructions:l,addressTableLookups:h})}}let V={deserializeMessageVersion(e){let t=e[0],r=127&t;return r===t?"legacy":r},deserialize:e=>{let t=V.deserializeMessageVersion(e);if("legacy"===t)return D.from(e);if(0===t)return j.deserialize(e);throw Error(`Transaction message version ${t} deserialization is not supported`)}},G=((n={})[n.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",n[n.PROCESSED=1]="PROCESSED",n[n.TIMED_OUT=2]="TIMED_OUT",n[n.NONCE_INVALID=3]="NONCE_INVALID",n),X=s.Buffer.alloc(W).fill(0);class Y{constructor(e){this.keys=void 0,this.programId=void 0,this.data=s.Buffer.alloc(0),this.programId=e.programId,this.keys=e.keys,e.data&&(this.data=e.data)}toJSON(){return{keys:this.keys.map(({pubkey:e,isSigner:t,isWritable:r})=>({pubkey:e.toJSON(),isSigner:t,isWritable:r})),programId:this.programId.toJSON(),data:[...this.data]}}}class Q{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(e){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this.minNonceContextSlot=void 0,this._message=void 0,this._json=void 0,!e)return;if(e.feePayer&&(this.feePayer=e.feePayer),e.signatures&&(this.signatures=e.signatures),Object.prototype.hasOwnProperty.call(e,"nonceInfo")){let{minContextSlot:t,nonceInfo:r}=e;this.minNonceContextSlot=t,this.nonceInfo=r}else if(Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")){let{blockhash:t,lastValidBlockHeight:r}=e;this.recentBlockhash=t,this.lastValidBlockHeight=r}else{let{recentBlockhash:t,nonceInfo:r}=e;r&&(this.nonceInfo=r),this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map(e=>e.toJSON()),signers:this.signatures.map(({publicKey:e})=>e.toJSON())}}add(...e){if(0===e.length)throw Error("No instructions");return e.forEach(e=>{"instructions"in e?this.instructions=this.instructions.concat(e.instructions):"data"in e&&"programId"in e&&"keys"in e?this.instructions.push(e):this.instructions.push(new Y(e))}),this}compileMessage(){let e,t,r;if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;if(this.nonceInfo?(e=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(e=this.recentBlockhash,t=this.instructions),!e)throw Error("Transaction recentBlockhash required");if(t.length<1&&console.warn("No instructions provided"),this.feePayer)r=this.feePayer;else if(this.signatures.length>0&&this.signatures[0].publicKey)r=this.signatures[0].publicKey;else throw Error("Transaction fee payer required");for(let e=0;e<t.length;e++)if(void 0===t[e].programId)throw Error(`Transaction instruction index ${e} has undefined program id`);let n=[],i=[];t.forEach(e=>{e.keys.forEach(e=>{i.push({...e})});let t=e.programId.toString();n.includes(t)||n.push(t)}),n.forEach(e=>{i.push({pubkey:new T(e),isSigner:!1,isWritable:!1})});let s=[];i.forEach(e=>{let t=e.pubkey.toString(),r=s.findIndex(e=>e.pubkey.toString()===t);r>-1?(s[r].isWritable=s[r].isWritable||e.isWritable,s[r].isSigner=s[r].isSigner||e.isSigner):s.push(e)}),s.sort(function(e,t){return e.isSigner!==t.isSigner?e.isSigner?-1:1:e.isWritable!==t.isWritable?e.isWritable?-1:1:e.pubkey.toBase58().localeCompare(t.pubkey.toBase58(),"en",{localeMatcher:"best fit",usage:"sort",sensitivity:"variant",ignorePunctuation:!1,numeric:!1,caseFirst:"lower"})});let a=s.findIndex(e=>e.pubkey.equals(r));if(a>-1){let[e]=s.splice(a,1);e.isSigner=!0,e.isWritable=!0,s.unshift(e)}else s.unshift({pubkey:r,isSigner:!0,isWritable:!0});for(let e of this.signatures){let t=s.findIndex(t=>t.pubkey.equals(e.publicKey));if(t>-1)s[t].isSigner||(s[t].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."));else throw Error(`unknown signer: ${e.publicKey.toString()}`)}let o=0,c=0,l=0,d=[],h=[];s.forEach(({pubkey:e,isSigner:t,isWritable:r})=>{t?(d.push(e.toString()),o+=1,r||(c+=1)):(h.push(e.toString()),r||(l+=1))});let g=d.concat(h),p=t.map(e=>{let{data:t,programId:r}=e;return{programIdIndex:g.indexOf(r.toString()),accounts:e.keys.map(e=>g.indexOf(e.pubkey.toString())),data:u().encode(t)}});return p.forEach(e=>{J(e.programIdIndex>=0),e.accounts.forEach(e=>J(e>=0))}),new D({header:{numRequiredSignatures:o,numReadonlySignedAccounts:c,numReadonlyUnsignedAccounts:l},accountKeys:g,recentBlockhash:e,instructions:p})}_compile(){let e=this.compileMessage(),t=e.accountKeys.slice(0,e.header.numRequiredSignatures);return this.signatures.length===t.length&&this.signatures.every((e,r)=>t[r].equals(e.publicKey))||(this.signatures=t.map(e=>({signature:null,publicKey:e}))),e}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(e){return(await e.getFeeForMessage(this.compileMessage())).value}setSigners(...e){if(0===e.length)throw Error("No signers");let t=new Set;this.signatures=e.filter(e=>{let r=e.toString();return!t.has(r)&&(t.add(r),!0)}).map(e=>({signature:null,publicKey:e}))}sign(...e){if(0===e.length)throw Error("No signers");let t=new Set,r=[];for(let n of e){let e=n.publicKey.toString();t.has(e)||(t.add(e),r.push(n))}this.signatures=r.map(e=>({signature:null,publicKey:e.publicKey}));let n=this._compile();this._partialSign(n,...r)}partialSign(...e){if(0===e.length)throw Error("No signers");let t=new Set,r=[];for(let n of e){let e=n.publicKey.toString();t.has(e)||(t.add(e),r.push(n))}let n=this._compile();this._partialSign(n,...r)}_partialSign(e,...t){let r=e.serialize();t.forEach(e=>{let t=A(r,e.secretKey);this._addSignature(e.publicKey,B(t))})}addSignature(e,t){this._compile(),this._addSignature(e,t)}_addSignature(e,t){J(64===t.length);let r=this.signatures.findIndex(t=>e.equals(t.publicKey));if(r<0)throw Error(`unknown signer: ${e.toString()}`);this.signatures[r].signature=s.Buffer.from(t)}verifySignatures(e=!0){return!this._getMessageSignednessErrors(this.serializeMessage(),e)}_getMessageSignednessErrors(e,t){let r={};for(let{signature:n,publicKey:i}of this.signatures)null===n?t&&(r.missing||=[]).push(i):v(n,e,i.toBytes())||(r.invalid||=[]).push(i);return r.invalid||r.missing?r:void 0}serialize(e){let{requireAllSignatures:t,verifySignatures:r}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},e),n=this.serializeMessage();if(r){let e=this._getMessageSignednessErrors(n,t);if(e){let t="Signature verification failed.";throw e.invalid&&(t+=`
Invalid signature for public key${1===e.invalid.length?"":"(s)"} [\`${e.invalid.map(e=>e.toBase58()).join("`, `")}\`].`),e.missing&&(t+=`
Missing signature for public key${1===e.missing.length?"":"(s)"} [\`${e.missing.map(e=>e.toBase58()).join("`, `")}\`].`),Error(t)}}return this._serialize(n)}_serialize(e){let{signatures:t}=this,r=[];M(r,t.length);let n=r.length+64*t.length+e.length,i=s.Buffer.alloc(n);return J(t.length<256),s.Buffer.from(r).copy(i,0),t.forEach(({signature:e},t)=>{null!==e&&(J(64===e.length,"signature has invalid length"),s.Buffer.from(e).copy(i,r.length+64*t))}),e.copy(i,r.length+64*t.length),J(i.length<=1232,`Transaction too large: ${i.length} > 1232`),i}get keys(){return J(1===this.instructions.length),this.instructions[0].keys.map(e=>e.pubkey)}get programId(){return J(1===this.instructions.length),this.instructions[0].programId}get data(){return J(1===this.instructions.length),this.instructions[0].data}static from(e){let t=[...e],r=N(t),n=[];for(let e=0;e<r;e++){let e=F(t,0,W);n.push(u().encode(s.Buffer.from(e)))}return Q.populate(D.from(t),n)}static populate(e,t=[]){let r=new Q;return r.recentBlockhash=e.recentBlockhash,e.header.numRequiredSignatures>0&&(r.feePayer=e.accountKeys[0]),t.forEach((t,n)=>{let i={signature:t==u().encode(X)?null:u().decode(t),publicKey:e.accountKeys[n]};r.signatures.push(i)}),e.instructions.forEach(t=>{let n=t.accounts.map(t=>{let n=e.accountKeys[t];return{pubkey:n,isSigner:r.signatures.some(e=>e.publicKey.toString()===n.toString())||e.isAccountSigner(t),isWritable:e.isAccountWritable(t)}});r.instructions.push(new Y({keys:n,programId:e.accountKeys[t.programIdIndex],data:u().decode(t.data)}))}),r._message=e,r._json=r.toJSON(),r}}class Z{get version(){return this.message.version}constructor(e,t){if(this.signatures=void 0,this.message=void 0,void 0!==t)J(t.length===e.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures"),this.signatures=t;else{let t=[];for(let r=0;r<e.header.numRequiredSignatures;r++)t.push(new Uint8Array(W));this.signatures=t}this.message=e}serialize(){let e=this.message.serialize(),t=[];M(t,this.signatures.length);let r=g.n_([g.Ik(t.length,"encodedSignaturesLength"),g.A9(K(),this.signatures.length,"signatures"),g.Ik(e.length,"serializedMessage")]),n=new Uint8Array(2048),i=r.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:e},n);return n.slice(0,i)}static deserialize(e){let t=[...e],r=[],n=N(t);for(let e=0;e<n;e++)r.push(new Uint8Array(F(t,0,W)));return new Z(V.deserialize(new Uint8Array(t)),r)}sign(e){let t=this.message.serialize(),r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(let n of e){let e=r.findIndex(e=>e.equals(n.publicKey));J(e>=0,`Cannot sign with non signer key ${n.publicKey.toBase58()}`),this.signatures[e]=A(t,n.secretKey)}}addSignature(e,t){J(64===t.byteLength,"Signature must be 64 bytes long");let r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures).findIndex(t=>t.equals(e));J(r>=0,`Can not add signature; \`${e.toBase58()}\` is not required to sign this transaction`),this.signatures[r]=t}}let ee=new T("SysvarC1ock11111111111111111111111111111111");new T("SysvarEpochSchedu1e111111111111111111111111"),new T("Sysvar1nstructions1111111111111111111111111");let et=new T("SysvarRecentB1ockHashes11111111111111111111"),er=new T("SysvarRent111111111111111111111111111111111");new T("SysvarRewards111111111111111111111111111111"),new T("SysvarS1otHashes111111111111111111111111111"),new T("SysvarS1otHistory11111111111111111111111111");let en=new T("SysvarStakeHistory1111111111111111111111111");class ei extends Error{constructor({action:e,signature:t,transactionMessage:r,logs:n}){let i;let s=n?`Logs: 
${JSON.stringify(n.slice(-10),null,2)}. `:"",a="\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.";switch(e){case"send":i=`Transaction ${t} resulted in an error. 
${r}. `+s+a;break;case"simulate":i=`Simulation failed. 
Message: ${r}. 
`+s+a;break;default:i=`Unknown action '${e}'`}super(i),this.signature=void 0,this.transactionMessage=void 0,this.transactionLogs=void 0,this.signature=t,this.transactionMessage=r,this.transactionLogs=n||void 0}get transactionError(){return{message:this.transactionMessage,logs:Array.isArray(this.transactionLogs)?this.transactionLogs:void 0}}get logs(){let e=this.transactionLogs;if(null==e||"object"!=typeof e||!("then"in e))return e}async getLogs(e){return Array.isArray(this.transactionLogs)||(this.transactionLogs=new Promise((t,r)=>{e.getTransaction(this.signature).then(e=>{if(e&&e.meta&&e.meta.logMessages){let r=e.meta.logMessages;this.transactionLogs=r,t(r)}else r(Error("Log messages not found"))}).catch(r)})),await this.transactionLogs}}class es extends Error{constructor({code:e,message:t,data:r},n){super(null!=n?`${n}: ${t}`:t),this.code=void 0,this.data=void 0,this.code=e,this.data=r,this.name="SolanaJSONRPCError"}}async function ea(e,t,r,n){let i;let s=n&&{skipPreflight:n.skipPreflight,preflightCommitment:n.preflightCommitment||n.commitment,maxRetries:n.maxRetries,minContextSlot:n.minContextSlot},a=await e.sendTransaction(t,r,s);if(null!=t.recentBlockhash&&null!=t.lastValidBlockHeight)i=(await e.confirmTransaction({abortSignal:n?.abortSignal,signature:a,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},n&&n.commitment)).value;else if(null!=t.minNonceContextSlot&&null!=t.nonceInfo){let{nonceInstruction:r}=t.nonceInfo,s=r.keys[0].pubkey;i=(await e.confirmTransaction({abortSignal:n?.abortSignal,minContextSlot:t.minNonceContextSlot,nonceAccountPubkey:s,nonceValue:t.nonceInfo.nonce,signature:a},n&&n.commitment)).value}else n?.abortSignal!=null&&console.warn("sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` or a combination of `nonceInfo` and `minNonceContextSlot` are abortable."),i=(await e.confirmTransaction(a,n&&n.commitment)).value;if(i.err){if(null!=a)throw new ei({action:"send",signature:a,transactionMessage:`Status: (${JSON.stringify(i)})`});throw Error(`Transaction ${a} failed (${JSON.stringify(i)})`)}return a}function eo(e){return new Promise(t=>setTimeout(t,e))}function ec(e,t){let r=e.layout.span>=0?e.layout.span:function e(t,r){let n=t=>{if(t.span>=0)return t.span;if("function"==typeof t.alloc)return t.alloc(r[t.property]);if("count"in t&&"elementLayout"in t){let e=r[t.property];if(Array.isArray(e))return e.length*n(t.elementLayout)}else if("fields"in t)return e({layout:t},r[t.property]);return 0},i=0;return t.layout.fields.forEach(e=>{i+=n(e)}),i}(e,t),n=s.Buffer.alloc(r),i=Object.assign({instruction:e.index},t);return e.layout.encode(i,n),n}let el=g._O("lamportsPerSignature"),eu=g.n_([g.Jq("version"),g.Jq("state"),z("authorizedPubkey"),z("nonce"),g.n_([el],"feeCalculator")]),ed=eu.span;class eh{constructor(e){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=e.authorizedPubkey,this.nonce=e.nonce,this.feeCalculator=e.feeCalculator}static fromAccountData(e){let t=eu.decode(B(e),0);return new eh({authorizedPubkey:new T(t.authorizedPubkey),nonce:new T(t.nonce).toString(),feeCalculator:t.feeCalculator})}}let eg=e=>({decode:e.decode.bind(e),encode:e.encode.bind(e)}),ep=e=>{let t=(0,g.Ik)(8,e),{encode:r,decode:n}=eg(t);return t.decode=(e,t)=>{let r=n(e,t);return(0,p.oU)(s.Buffer.from(r))},t.encode=(e,t,n)=>r((0,p.k$)(e,8),t,n),t},eb=Object.freeze({Create:{index:0,layout:g.n_([g.Jq("instruction"),g.gM("lamports"),g.gM("space"),z("programId")])},Assign:{index:1,layout:g.n_([g.Jq("instruction"),z("programId")])},Transfer:{index:2,layout:g.n_([g.Jq("instruction"),ep("lamports")])},CreateWithSeed:{index:3,layout:g.n_([g.Jq("instruction"),z("base"),O("seed"),g.gM("lamports"),g.gM("space"),z("programId")])},AdvanceNonceAccount:{index:4,layout:g.n_([g.Jq("instruction")])},WithdrawNonceAccount:{index:5,layout:g.n_([g.Jq("instruction"),g.gM("lamports")])},InitializeNonceAccount:{index:6,layout:g.n_([g.Jq("instruction"),z("authorized")])},AuthorizeNonceAccount:{index:7,layout:g.n_([g.Jq("instruction"),z("authorized")])},Allocate:{index:8,layout:g.n_([g.Jq("instruction"),g.gM("space")])},AllocateWithSeed:{index:9,layout:g.n_([g.Jq("instruction"),z("base"),O("seed"),g.gM("space"),z("programId")])},AssignWithSeed:{index:10,layout:g.n_([g.Jq("instruction"),z("base"),O("seed"),z("programId")])},TransferWithSeed:{index:11,layout:g.n_([g.Jq("instruction"),ep("lamports"),O("seed"),z("programId")])},UpgradeNonceAccount:{index:12,layout:g.n_([g.Jq("instruction")])}});class em{constructor(){}static createAccount(e){let t=ec(eb.Create,{lamports:e.lamports,space:e.space,programId:B(e.programId.toBuffer())});return new Y({keys:[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:t})}static transfer(e){let t,r;return"basePubkey"in e?(t=ec(eb.TransferWithSeed,{lamports:BigInt(e.lamports),seed:e.seed,programId:B(e.programId.toBuffer())}),r=[{pubkey:e.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]):(t=ec(eb.Transfer,{lamports:BigInt(e.lamports)}),r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]),new Y({keys:r,programId:this.programId,data:t})}static assign(e){let t,r;return"basePubkey"in e?(t=ec(eb.AssignWithSeed,{base:B(e.basePubkey.toBuffer()),seed:e.seed,programId:B(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]):(t=ec(eb.Assign,{programId:B(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]),new Y({keys:r,programId:this.programId,data:t})}static createAccountWithSeed(e){let t=ec(eb.CreateWithSeed,{base:B(e.basePubkey.toBuffer()),seed:e.seed,lamports:e.lamports,space:e.space,programId:B(e.programId.toBuffer())}),r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!1,isWritable:!0}];return e.basePubkey!=e.fromPubkey&&r.push({pubkey:e.basePubkey,isSigner:!0,isWritable:!1}),new Y({keys:r,programId:this.programId,data:t})}static createNonceAccount(e){let t=new Q;"basePubkey"in e&&"seed"in e?t.add(em.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:ed,programId:this.programId})):t.add(em.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,lamports:e.lamports,space:ed,programId:this.programId}));let r={noncePubkey:e.noncePubkey,authorizedPubkey:e.authorizedPubkey};return t.add(this.nonceInitialize(r)),t}static nonceInitialize(e){let t=ec(eb.InitializeNonceAccount,{authorized:B(e.authorizedPubkey.toBuffer())});return new Y({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:et,isSigner:!1,isWritable:!1},{pubkey:er,isSigner:!1,isWritable:!1}],programId:this.programId,data:t})}static nonceAdvance(e){let t=ec(eb.AdvanceNonceAccount);return new Y({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:et,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceWithdraw(e){let t=ec(eb.WithdrawNonceAccount,{lamports:e.lamports});return new Y({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0},{pubkey:et,isSigner:!1,isWritable:!1},{pubkey:er,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceAuthorize(e){let t=ec(eb.AuthorizeNonceAccount,{authorized:B(e.newAuthorizedPubkey.toBuffer())});return new Y({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static allocate(e){let t,r;return"basePubkey"in e?(t=ec(eb.AllocateWithSeed,{base:B(e.basePubkey.toBuffer()),seed:e.seed,space:e.space,programId:B(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]):(t=ec(eb.Allocate,{space:e.space}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]),new Y({keys:r,programId:this.programId,data:t})}}em.programId=new T("11111111111111111111111111111111");class ey{constructor(){}static getMinNumSignatures(e){return 2*(Math.ceil(e/ey.chunkSize)+1+1)}static async load(e,t,r,n,i){{let s=await e.getMinimumBalanceForRentExemption(i.length),a=await e.getAccountInfo(r.publicKey,"confirmed"),o=null;if(null!==a){if(a.executable)return console.error("Program load failed, account is already executable"),!1;a.data.length!==i.length&&(o=o||new Q).add(em.allocate({accountPubkey:r.publicKey,space:i.length})),a.owner.equals(n)||(o=o||new Q).add(em.assign({accountPubkey:r.publicKey,programId:n})),a.lamports<s&&(o=o||new Q).add(em.transfer({fromPubkey:t.publicKey,toPubkey:r.publicKey,lamports:s-a.lamports}))}else o=new Q().add(em.createAccount({fromPubkey:t.publicKey,newAccountPubkey:r.publicKey,lamports:s>0?s:1,space:i.length,programId:n}));null!==o&&await ea(e,o,[t,r],{commitment:"confirmed"})}let a=g.n_([g.Jq("instruction"),g.Jq("offset"),g.Jq("bytesLength"),g.Jq("bytesLengthPadding"),g.A9(g.u8("byte"),g.cv(g.Jq(),-8),"bytes")]),o=ey.chunkSize,c=0,l=i,u=[];for(;l.length>0;){let i=l.slice(0,o),d=s.Buffer.alloc(o+16);a.encode({instruction:0,offset:c,bytes:i,bytesLength:0,bytesLengthPadding:0},d);let h=new Q().add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0}],programId:n,data:d});u.push(ea(e,h,[t,r],{commitment:"confirmed"})),e._rpcEndpoint.includes("solana.com")&&await eo(250),c+=o,l=l.slice(o)}await Promise.all(u);{let i=g.n_([g.Jq("instruction")]),a=s.Buffer.alloc(i.span);i.encode({instruction:1},a);let o=new Q().add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0},{pubkey:er,isSigner:!1,isWritable:!1}],programId:n,data:a}),c="processed",l=await e.sendTransaction(o,[t,r],{preflightCommitment:c}),{context:u,value:d}=await e.confirmTransaction({signature:l,lastValidBlockHeight:o.lastValidBlockHeight,blockhash:o.recentBlockhash},c);if(d.err)throw Error(`Transaction ${l} failed (${JSON.stringify(d)})`);for(;;){try{if(await e.getSlot({commitment:c})>u.slot)break}catch{}await new Promise(e=>setTimeout(e,Math.round(200)))}}return!0}}ey.chunkSize=932,new T("BPFLoader2111111111111111111111111111111111");var ef=Object.prototype.toString,ek=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t},ew=(i=function(e){var t=function e(t,r){var n,i,s,a,o,c,l;if(!0===t)return"true";if(!1===t)return"false";switch(typeof t){case"object":if(null===t)return null;if(t.toJSON&&"function"==typeof t.toJSON)return e(t.toJSON(),r);if("[object Array]"===(l=ef.call(t))){for(n=0,s="[",i=t.length-1;n<i;n++)s+=e(t[n],!0)+",";return i>-1&&(s+=e(t[n],!0)),s+"]"}if("[object Object]"!==l)return JSON.stringify(t);for(i=(a=ek(t).sort()).length,s="",n=0;n<i;)void 0!==(c=e(t[o=a[n]],!1))&&(s&&(s+=","),s+=JSON.stringify(o)+":"+c),n++;return"{"+s+"}";case"function":case"undefined":return r?null:void 0;case"string":return JSON.stringify(t);default:return isFinite(t)?t:null}}(e,!1);if(void 0!==t)return""+t}).__esModule&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i;function eS(e){let t=0;for(;e>1;)e/=2,t++;return t}class e_{constructor(e,t,r,n,i){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=e,this.leaderScheduleSlotOffset=t,this.warmup=r,this.firstNormalEpoch=n,this.firstNormalSlot=i}getEpoch(e){return this.getEpochAndSlotIndex(e)[0]}getEpochAndSlotIndex(e){if(e<this.firstNormalSlot){var t;let r=eS(0===(t=e+32+1)?1:(t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,(t|=t>>32)+1))-eS(32)-1,n=this.getSlotsInEpoch(r);return[r,e-(n-32)]}{let t=e-this.firstNormalSlot,r=Math.floor(t/this.slotsPerEpoch);return[this.firstNormalEpoch+r,t%this.slotsPerEpoch]}}getFirstSlotInEpoch(e){return e<=this.firstNormalEpoch?(Math.pow(2,e)-1)*32:(e-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(e){return this.getFirstSlotInEpoch(e)+this.getSlotsInEpoch(e)-1}getSlotsInEpoch(e){return e<this.firstNormalEpoch?Math.pow(2,e+eS(32)):this.slotsPerEpoch}}var eI=globalThis.fetch;class eA extends f.Ey{constructor(e,t,r){super(e=>{let r=(0,f.XY)(e,{autoconnect:!0,max_reconnects:5,reconnect:!0,reconnect_interval:1e3,...t});return"socket"in r?this.underlyingSocket=r.socket:this.underlyingSocket=r,r},e,t,r),this.underlyingSocket=void 0}call(...e){let t=this.underlyingSocket?.readyState;return 1===t?super.call(...e):Promise.reject(Error("Tried to call a JSON-RPC method `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}notify(...e){let t=this.underlyingSocket?.readyState;return 1===t?super.notify(...e):Promise.reject(Error("Tried to send a JSON-RPC notification `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}}class ev{constructor(e){this.key=void 0,this.state=void 0,this.key=e.key,this.state=e.state}isActive(){let e=BigInt("0xffffffffffffffff");return this.state.deactivationSlot===e}static deserialize(e){let t=function(e,t){let r;try{r=e.layout.decode(t)}catch(e){throw Error("invalid instruction; "+e)}if(r.typeIndex!==e.index)throw Error(`invalid account data; account type mismatch ${r.typeIndex} != ${e.index}`);return r}(eB,e),r=e.length-56;J(r>=0,"lookup table is invalid"),J(r%32==0,"lookup table is invalid");let{addresses:n}=g.n_([g.A9(z(),r/32,"addresses")]).decode(e.slice(56));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:0!==t.authority.length?new T(t.authority[0]):void 0,addresses:n.map(e=>new T(e))}}}let eB={index:1,layout:g.n_([g.Jq("typeIndex"),ep("deactivationSlot"),g._O("lastExtendedSlot"),g.u8("lastExtendedStartIndex"),g.u8(),g.A9(z(),g.cv(g.u8(),-1),"authority")])},ex=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i,eP=(0,b.coerce)((0,b.instance)(T),(0,b.string)(),e=>new T(e)),eE=(0,b.tuple)([(0,b.string)(),(0,b.literal)("base64")]),eT=(0,b.coerce)((0,b.instance)(s.Buffer),eE,e=>s.Buffer.from(e[0],"base64"));function eW(e){let t,r;if("string"==typeof e)t=e;else if(e){let{commitment:n,...i}=e;t=n,r=i}return{commitment:t,config:r}}function eC(e){return(0,b.union)([(0,b.type)({jsonrpc:(0,b.literal)("2.0"),id:(0,b.string)(),result:e}),(0,b.type)({jsonrpc:(0,b.literal)("2.0"),id:(0,b.string)(),error:(0,b.type)({code:(0,b.unknown)(),message:(0,b.string)(),data:(0,b.optional)((0,b.any)())})})])}let eq=eC((0,b.unknown)());function eL(e){return(0,b.coerce)(eC(e),eq,t=>"error"in t?t:{...t,result:(0,b.create)(t.result,e)})}function eR(e){return eL((0,b.type)({context:(0,b.type)({slot:(0,b.number)()}),value:e}))}function ez(e){return(0,b.type)({context:(0,b.type)({slot:(0,b.number)()}),value:e})}function eK(e,t){return 0===e?new j({header:t.header,staticAccountKeys:t.accountKeys.map(e=>new T(e)),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map(e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:u().decode(e.data)})),addressTableLookups:t.addressTableLookups}):new D(t)}let eO=(0,b.type)({foundation:(0,b.number)(),foundationTerm:(0,b.number)(),initial:(0,b.number)(),taper:(0,b.number)(),terminal:(0,b.number)()}),eN=eL((0,b.array)((0,b.nullable)((0,b.type)({epoch:(0,b.number)(),effectiveSlot:(0,b.number)(),amount:(0,b.number)(),postBalance:(0,b.number)(),commission:(0,b.optional)((0,b.nullable)((0,b.number)()))})))),eM=(0,b.array)((0,b.type)({slot:(0,b.number)(),prioritizationFee:(0,b.number)()})),eJ=(0,b.type)({total:(0,b.number)(),validator:(0,b.number)(),foundation:(0,b.number)(),epoch:(0,b.number)()}),eU=(0,b.type)({epoch:(0,b.number)(),slotIndex:(0,b.number)(),slotsInEpoch:(0,b.number)(),absoluteSlot:(0,b.number)(),blockHeight:(0,b.optional)((0,b.number)()),transactionCount:(0,b.optional)((0,b.number)())}),e$=(0,b.type)({slotsPerEpoch:(0,b.number)(),leaderScheduleSlotOffset:(0,b.number)(),warmup:(0,b.boolean)(),firstNormalEpoch:(0,b.number)(),firstNormalSlot:(0,b.number)()}),eH=(0,b.record)((0,b.string)(),(0,b.array)((0,b.number)())),eF=(0,b.nullable)((0,b.union)([(0,b.type)({}),(0,b.string)()])),eD=(0,b.type)({err:eF}),ej=(0,b.literal)("receivedSignature"),eV=(0,b.type)({"solana-core":(0,b.string)(),"feature-set":(0,b.optional)((0,b.number)())}),eG=eR((0,b.type)({err:(0,b.nullable)((0,b.union)([(0,b.type)({}),(0,b.string)()])),logs:(0,b.nullable)((0,b.array)((0,b.string)())),accounts:(0,b.optional)((0,b.nullable)((0,b.array)((0,b.nullable)((0,b.type)({executable:(0,b.boolean)(),owner:(0,b.string)(),lamports:(0,b.number)(),data:(0,b.array)((0,b.string)()),rentEpoch:(0,b.optional)((0,b.number)())}))))),unitsConsumed:(0,b.optional)((0,b.number)()),returnData:(0,b.optional)((0,b.nullable)((0,b.type)({programId:(0,b.string)(),data:(0,b.tuple)([(0,b.string)(),(0,b.literal)("base64")])})))})),eX=eR((0,b.type)({byIdentity:(0,b.record)((0,b.string)(),(0,b.array)((0,b.number)())),range:(0,b.type)({firstSlot:(0,b.number)(),lastSlot:(0,b.number)()})})),eY=eL(eO),eQ=eL(eJ),eZ=eL(eM),e0=eL(eU),e1=eL(e$),e8=eL(eH),e2=eL((0,b.number)()),e5=eR((0,b.type)({total:(0,b.number)(),circulating:(0,b.number)(),nonCirculating:(0,b.number)(),nonCirculatingAccounts:(0,b.array)(eP)})),e4=(0,b.type)({amount:(0,b.string)(),uiAmount:(0,b.nullable)((0,b.number)()),decimals:(0,b.number)(),uiAmountString:(0,b.optional)((0,b.string)())}),e6=eR((0,b.array)((0,b.type)({address:eP,amount:(0,b.string)(),uiAmount:(0,b.nullable)((0,b.number)()),decimals:(0,b.number)(),uiAmountString:(0,b.optional)((0,b.string)())}))),e3=eR((0,b.array)((0,b.type)({pubkey:eP,account:(0,b.type)({executable:(0,b.boolean)(),owner:eP,lamports:(0,b.number)(),data:eT,rentEpoch:(0,b.number)()})}))),e9=(0,b.type)({program:(0,b.string)(),parsed:(0,b.unknown)(),space:(0,b.number)()}),e7=eR((0,b.array)((0,b.type)({pubkey:eP,account:(0,b.type)({executable:(0,b.boolean)(),owner:eP,lamports:(0,b.number)(),data:e9,rentEpoch:(0,b.number)()})}))),te=eR((0,b.array)((0,b.type)({lamports:(0,b.number)(),address:eP}))),tt=(0,b.type)({executable:(0,b.boolean)(),owner:eP,lamports:(0,b.number)(),data:eT,rentEpoch:(0,b.number)()}),tr=(0,b.type)({pubkey:eP,account:tt}),tn=(0,b.coerce)((0,b.union)([(0,b.instance)(s.Buffer),e9]),(0,b.union)([eE,e9]),e=>Array.isArray(e)?(0,b.create)(e,eT):e),ti=(0,b.type)({executable:(0,b.boolean)(),owner:eP,lamports:(0,b.number)(),data:tn,rentEpoch:(0,b.number)()}),ts=(0,b.type)({pubkey:eP,account:ti}),ta=(0,b.type)({state:(0,b.union)([(0,b.literal)("active"),(0,b.literal)("inactive"),(0,b.literal)("activating"),(0,b.literal)("deactivating")]),active:(0,b.number)(),inactive:(0,b.number)()}),to=eL((0,b.array)((0,b.type)({signature:(0,b.string)(),slot:(0,b.number)(),err:eF,memo:(0,b.nullable)((0,b.string)()),blockTime:(0,b.optional)((0,b.nullable)((0,b.number)()))}))),tc=eL((0,b.array)((0,b.type)({signature:(0,b.string)(),slot:(0,b.number)(),err:eF,memo:(0,b.nullable)((0,b.string)()),blockTime:(0,b.optional)((0,b.nullable)((0,b.number)()))}))),tl=(0,b.type)({subscription:(0,b.number)(),result:ez(tt)}),tu=(0,b.type)({pubkey:eP,account:tt}),td=(0,b.type)({subscription:(0,b.number)(),result:ez(tu)}),th=(0,b.type)({parent:(0,b.number)(),slot:(0,b.number)(),root:(0,b.number)()}),tg=(0,b.type)({subscription:(0,b.number)(),result:th}),tp=(0,b.union)([(0,b.type)({type:(0,b.union)([(0,b.literal)("firstShredReceived"),(0,b.literal)("completed"),(0,b.literal)("optimisticConfirmation"),(0,b.literal)("root")]),slot:(0,b.number)(),timestamp:(0,b.number)()}),(0,b.type)({type:(0,b.literal)("createdBank"),parent:(0,b.number)(),slot:(0,b.number)(),timestamp:(0,b.number)()}),(0,b.type)({type:(0,b.literal)("frozen"),slot:(0,b.number)(),timestamp:(0,b.number)(),stats:(0,b.type)({numTransactionEntries:(0,b.number)(),numSuccessfulTransactions:(0,b.number)(),numFailedTransactions:(0,b.number)(),maxTransactionsPerEntry:(0,b.number)()})}),(0,b.type)({type:(0,b.literal)("dead"),slot:(0,b.number)(),timestamp:(0,b.number)(),err:(0,b.string)()})]),tb=(0,b.type)({subscription:(0,b.number)(),result:tp}),tm=(0,b.type)({subscription:(0,b.number)(),result:ez((0,b.union)([eD,ej]))}),ty=(0,b.type)({subscription:(0,b.number)(),result:(0,b.number)()}),tf=(0,b.type)({pubkey:(0,b.string)(),gossip:(0,b.nullable)((0,b.string)()),tpu:(0,b.nullable)((0,b.string)()),rpc:(0,b.nullable)((0,b.string)()),version:(0,b.nullable)((0,b.string)())}),tk=(0,b.type)({votePubkey:(0,b.string)(),nodePubkey:(0,b.string)(),activatedStake:(0,b.number)(),epochVoteAccount:(0,b.boolean)(),epochCredits:(0,b.array)((0,b.tuple)([(0,b.number)(),(0,b.number)(),(0,b.number)()])),commission:(0,b.number)(),lastVote:(0,b.number)(),rootSlot:(0,b.nullable)((0,b.number)())}),tw=eL((0,b.type)({current:(0,b.array)(tk),delinquent:(0,b.array)(tk)})),tS=(0,b.union)([(0,b.literal)("processed"),(0,b.literal)("confirmed"),(0,b.literal)("finalized")]),t_=(0,b.type)({slot:(0,b.number)(),confirmations:(0,b.nullable)((0,b.number)()),err:eF,confirmationStatus:(0,b.optional)(tS)}),tI=eR((0,b.array)((0,b.nullable)(t_))),tA=eL((0,b.number)()),tv=(0,b.type)({accountKey:eP,writableIndexes:(0,b.array)((0,b.number)()),readonlyIndexes:(0,b.array)((0,b.number)())}),tB=(0,b.type)({signatures:(0,b.array)((0,b.string)()),message:(0,b.type)({accountKeys:(0,b.array)((0,b.string)()),header:(0,b.type)({numRequiredSignatures:(0,b.number)(),numReadonlySignedAccounts:(0,b.number)(),numReadonlyUnsignedAccounts:(0,b.number)()}),instructions:(0,b.array)((0,b.type)({accounts:(0,b.array)((0,b.number)()),data:(0,b.string)(),programIdIndex:(0,b.number)()})),recentBlockhash:(0,b.string)(),addressTableLookups:(0,b.optional)((0,b.array)(tv))})}),tx=(0,b.type)({pubkey:eP,signer:(0,b.boolean)(),writable:(0,b.boolean)(),source:(0,b.optional)((0,b.union)([(0,b.literal)("transaction"),(0,b.literal)("lookupTable")]))}),tP=(0,b.type)({accountKeys:(0,b.array)(tx),signatures:(0,b.array)((0,b.string)())}),tE=(0,b.type)({parsed:(0,b.unknown)(),program:(0,b.string)(),programId:eP}),tT=(0,b.type)({accounts:(0,b.array)(eP),data:(0,b.string)(),programId:eP}),tW=(0,b.union)([tT,tE]),tC=(0,b.union)([(0,b.type)({parsed:(0,b.unknown)(),program:(0,b.string)(),programId:(0,b.string)()}),(0,b.type)({accounts:(0,b.array)((0,b.string)()),data:(0,b.string)(),programId:(0,b.string)()})]),tq=(0,b.coerce)(tW,tC,e=>"accounts"in e?(0,b.create)(e,tT):(0,b.create)(e,tE)),tL=(0,b.type)({signatures:(0,b.array)((0,b.string)()),message:(0,b.type)({accountKeys:(0,b.array)(tx),instructions:(0,b.array)(tq),recentBlockhash:(0,b.string)(),addressTableLookups:(0,b.optional)((0,b.nullable)((0,b.array)(tv)))})}),tR=(0,b.type)({accountIndex:(0,b.number)(),mint:(0,b.string)(),owner:(0,b.optional)((0,b.string)()),uiTokenAmount:e4}),tz=(0,b.type)({writable:(0,b.array)(eP),readonly:(0,b.array)(eP)}),tK=(0,b.type)({err:eF,fee:(0,b.number)(),innerInstructions:(0,b.optional)((0,b.nullable)((0,b.array)((0,b.type)({index:(0,b.number)(),instructions:(0,b.array)((0,b.type)({accounts:(0,b.array)((0,b.number)()),data:(0,b.string)(),programIdIndex:(0,b.number)()}))})))),preBalances:(0,b.array)((0,b.number)()),postBalances:(0,b.array)((0,b.number)()),logMessages:(0,b.optional)((0,b.nullable)((0,b.array)((0,b.string)()))),preTokenBalances:(0,b.optional)((0,b.nullable)((0,b.array)(tR))),postTokenBalances:(0,b.optional)((0,b.nullable)((0,b.array)(tR))),loadedAddresses:(0,b.optional)(tz),computeUnitsConsumed:(0,b.optional)((0,b.number)())}),tO=(0,b.type)({err:eF,fee:(0,b.number)(),innerInstructions:(0,b.optional)((0,b.nullable)((0,b.array)((0,b.type)({index:(0,b.number)(),instructions:(0,b.array)(tq)})))),preBalances:(0,b.array)((0,b.number)()),postBalances:(0,b.array)((0,b.number)()),logMessages:(0,b.optional)((0,b.nullable)((0,b.array)((0,b.string)()))),preTokenBalances:(0,b.optional)((0,b.nullable)((0,b.array)(tR))),postTokenBalances:(0,b.optional)((0,b.nullable)((0,b.array)(tR))),loadedAddresses:(0,b.optional)(tz),computeUnitsConsumed:(0,b.optional)((0,b.number)())}),tN=(0,b.union)([(0,b.literal)(0),(0,b.literal)("legacy")]),tM=(0,b.type)({pubkey:(0,b.string)(),lamports:(0,b.number)(),postBalance:(0,b.nullable)((0,b.number)()),rewardType:(0,b.nullable)((0,b.string)()),commission:(0,b.optional)((0,b.nullable)((0,b.number)()))}),tJ=eL((0,b.nullable)((0,b.type)({blockhash:(0,b.string)(),previousBlockhash:(0,b.string)(),parentSlot:(0,b.number)(),transactions:(0,b.array)((0,b.type)({transaction:tB,meta:(0,b.nullable)(tK),version:(0,b.optional)(tN)})),rewards:(0,b.optional)((0,b.array)(tM)),blockTime:(0,b.nullable)((0,b.number)()),blockHeight:(0,b.nullable)((0,b.number)())}))),tU=eL((0,b.nullable)((0,b.type)({blockhash:(0,b.string)(),previousBlockhash:(0,b.string)(),parentSlot:(0,b.number)(),rewards:(0,b.optional)((0,b.array)(tM)),blockTime:(0,b.nullable)((0,b.number)()),blockHeight:(0,b.nullable)((0,b.number)())}))),t$=eL((0,b.nullable)((0,b.type)({blockhash:(0,b.string)(),previousBlockhash:(0,b.string)(),parentSlot:(0,b.number)(),transactions:(0,b.array)((0,b.type)({transaction:tP,meta:(0,b.nullable)(tK),version:(0,b.optional)(tN)})),rewards:(0,b.optional)((0,b.array)(tM)),blockTime:(0,b.nullable)((0,b.number)()),blockHeight:(0,b.nullable)((0,b.number)())}))),tH=eL((0,b.nullable)((0,b.type)({blockhash:(0,b.string)(),previousBlockhash:(0,b.string)(),parentSlot:(0,b.number)(),transactions:(0,b.array)((0,b.type)({transaction:tL,meta:(0,b.nullable)(tO),version:(0,b.optional)(tN)})),rewards:(0,b.optional)((0,b.array)(tM)),blockTime:(0,b.nullable)((0,b.number)()),blockHeight:(0,b.nullable)((0,b.number)())}))),tF=eL((0,b.nullable)((0,b.type)({blockhash:(0,b.string)(),previousBlockhash:(0,b.string)(),parentSlot:(0,b.number)(),transactions:(0,b.array)((0,b.type)({transaction:tP,meta:(0,b.nullable)(tO),version:(0,b.optional)(tN)})),rewards:(0,b.optional)((0,b.array)(tM)),blockTime:(0,b.nullable)((0,b.number)()),blockHeight:(0,b.nullable)((0,b.number)())}))),tD=eL((0,b.nullable)((0,b.type)({blockhash:(0,b.string)(),previousBlockhash:(0,b.string)(),parentSlot:(0,b.number)(),rewards:(0,b.optional)((0,b.array)(tM)),blockTime:(0,b.nullable)((0,b.number)()),blockHeight:(0,b.nullable)((0,b.number)())}))),tj=eL((0,b.nullable)((0,b.type)({blockhash:(0,b.string)(),previousBlockhash:(0,b.string)(),parentSlot:(0,b.number)(),transactions:(0,b.array)((0,b.type)({transaction:tB,meta:(0,b.nullable)(tK)})),rewards:(0,b.optional)((0,b.array)(tM)),blockTime:(0,b.nullable)((0,b.number)())}))),tV=eL((0,b.nullable)((0,b.type)({blockhash:(0,b.string)(),previousBlockhash:(0,b.string)(),parentSlot:(0,b.number)(),signatures:(0,b.array)((0,b.string)()),blockTime:(0,b.nullable)((0,b.number)())}))),tG=eL((0,b.nullable)((0,b.type)({slot:(0,b.number)(),meta:(0,b.nullable)(tK),blockTime:(0,b.optional)((0,b.nullable)((0,b.number)())),transaction:tB,version:(0,b.optional)(tN)}))),tX=eL((0,b.nullable)((0,b.type)({slot:(0,b.number)(),transaction:tL,meta:(0,b.nullable)(tO),blockTime:(0,b.optional)((0,b.nullable)((0,b.number)())),version:(0,b.optional)(tN)}))),tY=eR((0,b.type)({blockhash:(0,b.string)(),feeCalculator:(0,b.type)({lamportsPerSignature:(0,b.number)()})})),tQ=eR((0,b.type)({blockhash:(0,b.string)(),lastValidBlockHeight:(0,b.number)()})),tZ=eR((0,b.boolean)()),t0=(0,b.type)({slot:(0,b.number)(),numTransactions:(0,b.number)(),numSlots:(0,b.number)(),samplePeriodSecs:(0,b.number)()}),t1=eL((0,b.array)(t0)),t8=eR((0,b.nullable)((0,b.type)({feeCalculator:(0,b.type)({lamportsPerSignature:(0,b.number)()})}))),t2=eL((0,b.string)()),t5=eL((0,b.string)()),t4=(0,b.type)({err:eF,logs:(0,b.array)((0,b.string)()),signature:(0,b.string)()}),t6=(0,b.type)({result:ez(t4),subscription:(0,b.number)()}),t3={"solana-client":"js/0.0.0-development"};class t9{constructor(e,t){var r,n;let i,s,a,o,c,l;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionHashByClientSubscriptionId={},this._subscriptionStateChangeCallbacksByHash={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,this.getBlockHeight=(()=>{let e={};return async t=>{let{commitment:r,config:n}=eW(t),i=this._buildArgs([],r,void 0,n),s=ew(i);return e[s]=e[s]??(async()=>{try{let e=await this._rpcRequest("getBlockHeight",i),t=(0,b.create)(e,eL((0,b.number)()));if("error"in t)throw new es(t.error,"failed to get block height information");return t.result}finally{delete e[s]}})(),await e[s]}})(),t&&"string"==typeof t?this._commitment=t:t&&(this._commitment=t.commitment,this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout,i=t.wsEndpoint,s=t.httpHeaders,a=t.fetch,o=t.fetchMiddleware,c=t.disableRetryOnRateLimit,l=t.httpAgent),this._rpcEndpoint=function(e){if(!1===/^https?:/.test(e))throw TypeError("Endpoint URL must start with `http:` or `https:`.");return e}(e),this._rpcWsEndpoint=i||function(e){let t=e.match(ex);if(null==t)throw TypeError(`Failed to validate endpoint URL \`${e}\``);let[r,n,i,s]=t,a=e.startsWith("https:")?"wss:":"ws:",o=null==i?null:parseInt(i.slice(1),10),c=null==o?"":`:${o+1}`;return`${a}//${n}${c}${s}`}(e),this._rpcClient=function(e,t,r,n,i,s){let a,o;let c=r||eI;return null!=s&&console.warn("You have supplied an `httpAgent` when creating a `Connection` in a browser environment.It has been ignored; `httpAgent` is only used in Node environments."),n&&(o=async(e,t)=>{let r=await new Promise((r,i)=>{try{n(e,t,(e,t)=>r([e,t]))}catch(e){i(e)}});return await c(...r)}),new(y())(async(r,n)=>{let s={method:"POST",body:r,agent:a,headers:Object.assign({"Content-Type":"application/json"},t||{},t3)};try{let t,r=5,a=500;for(;t=o?await o(e,s):await c(e,s),429===t.status&&!0!==i&&(r-=1,0!==r);)console.error(`Server responded with ${t.status} ${t.statusText}.  Retrying after ${a}ms delay...`),await eo(a),a*=2;let l=await t.text();t.ok?n(null,l):n(Error(`${t.status} ${t.statusText}: ${l}`))}catch(e){e instanceof Error&&n(e)}},{})}(e,s,a,o,c,l),this._rpcRequest=(r=this._rpcClient,(e,t)=>new Promise((n,i)=>{r.request(e,t,(e,t)=>{if(e){i(e);return}n(t)})})),this._rpcBatchRequest=(n=this._rpcClient,e=>new Promise((t,r)=>{0===e.length&&t([]);let i=e.map(e=>n.request(e.methodName,e.args));n.request(i,(e,n)=>{if(e){r(e);return}t(n)})})),this._rpcWebSocket=new eA(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(e,t){let{commitment:r,config:n}=eW(t),i=this._buildArgs([e.toBase58()],r,void 0,n),s=await this._rpcRequest("getBalance",i),a=(0,b.create)(s,eR((0,b.number)()));if("error"in a)throw new es(a.error,`failed to get balance for ${e.toBase58()}`);return a.result}async getBalance(e,t){return await this.getBalanceAndContext(e,t).then(e=>e.value).catch(t=>{throw Error("failed to get balance of account "+e.toBase58()+": "+t)})}async getBlockTime(e){let t=await this._rpcRequest("getBlockTime",[e]),r=(0,b.create)(t,eL((0,b.nullable)((0,b.number)())));if("error"in r)throw new es(r.error,`failed to get block time for slot ${e}`);return r.result}async getMinimumLedgerSlot(){let e=await this._rpcRequest("minimumLedgerSlot",[]),t=(0,b.create)(e,eL((0,b.number)()));if("error"in t)throw new es(t.error,"failed to get minimum ledger slot");return t.result}async getFirstAvailableBlock(){let e=await this._rpcRequest("getFirstAvailableBlock",[]),t=(0,b.create)(e,e2);if("error"in t)throw new es(t.error,"failed to get first available block");return t.result}async getSupply(e){let t={};t="string"==typeof e?{commitment:e}:e?{...e,commitment:e&&e.commitment||this.commitment}:{commitment:this.commitment};let r=await this._rpcRequest("getSupply",[t]),n=(0,b.create)(r,e5);if("error"in n)throw new es(n.error,"failed to get supply");return n.result}async getTokenSupply(e,t){let r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenSupply",r),i=(0,b.create)(n,eR(e4));if("error"in i)throw new es(i.error,"failed to get token supply");return i.result}async getTokenAccountBalance(e,t){let r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenAccountBalance",r),i=(0,b.create)(n,eR(e4));if("error"in i)throw new es(i.error,"failed to get token account balance");return i.result}async getTokenAccountsByOwner(e,t,r){let{commitment:n,config:i}=eW(r),s=[e.toBase58()];"mint"in t?s.push({mint:t.mint.toBase58()}):s.push({programId:t.programId.toBase58()});let a=this._buildArgs(s,n,"base64",i),o=await this._rpcRequest("getTokenAccountsByOwner",a),c=(0,b.create)(o,e3);if("error"in c)throw new es(c.error,`failed to get token accounts owned by account ${e.toBase58()}`);return c.result}async getParsedTokenAccountsByOwner(e,t,r){let n=[e.toBase58()];"mint"in t?n.push({mint:t.mint.toBase58()}):n.push({programId:t.programId.toBase58()});let i=this._buildArgs(n,r,"jsonParsed"),s=await this._rpcRequest("getTokenAccountsByOwner",i),a=(0,b.create)(s,e7);if("error"in a)throw new es(a.error,`failed to get token accounts owned by account ${e.toBase58()}`);return a.result}async getLargestAccounts(e){let t={...e,commitment:e&&e.commitment||this.commitment},r=t.filter||t.commitment?[t]:[],n=await this._rpcRequest("getLargestAccounts",r),i=(0,b.create)(n,te);if("error"in i)throw new es(i.error,"failed to get largest accounts");return i.result}async getTokenLargestAccounts(e,t){let r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenLargestAccounts",r),i=(0,b.create)(n,e6);if("error"in i)throw new es(i.error,"failed to get token largest accounts");return i.result}async getAccountInfoAndContext(e,t){let{commitment:r,config:n}=eW(t),i=this._buildArgs([e.toBase58()],r,"base64",n),s=await this._rpcRequest("getAccountInfo",i),a=(0,b.create)(s,eR((0,b.nullable)(tt)));if("error"in a)throw new es(a.error,`failed to get info about account ${e.toBase58()}`);return a.result}async getParsedAccountInfo(e,t){let{commitment:r,config:n}=eW(t),i=this._buildArgs([e.toBase58()],r,"jsonParsed",n),s=await this._rpcRequest("getAccountInfo",i),a=(0,b.create)(s,eR((0,b.nullable)(ti)));if("error"in a)throw new es(a.error,`failed to get info about account ${e.toBase58()}`);return a.result}async getAccountInfo(e,t){try{return(await this.getAccountInfoAndContext(e,t)).value}catch(t){throw Error("failed to get info about account "+e.toBase58()+": "+t)}}async getMultipleParsedAccounts(e,t){let{commitment:r,config:n}=eW(t),i=e.map(e=>e.toBase58()),s=this._buildArgs([i],r,"jsonParsed",n),a=await this._rpcRequest("getMultipleAccounts",s),o=(0,b.create)(a,eR((0,b.array)((0,b.nullable)(ti))));if("error"in o)throw new es(o.error,`failed to get info for accounts ${i}`);return o.result}async getMultipleAccountsInfoAndContext(e,t){let{commitment:r,config:n}=eW(t),i=e.map(e=>e.toBase58()),s=this._buildArgs([i],r,"base64",n),a=await this._rpcRequest("getMultipleAccounts",s),o=(0,b.create)(a,eR((0,b.array)((0,b.nullable)(tt))));if("error"in o)throw new es(o.error,`failed to get info for accounts ${i}`);return o.result}async getMultipleAccountsInfo(e,t){return(await this.getMultipleAccountsInfoAndContext(e,t)).value}async getStakeActivation(e,t,r){let{commitment:n,config:i}=eW(t),s=this._buildArgs([e.toBase58()],n,void 0,{...i,epoch:null!=r?r:i?.epoch}),a=await this._rpcRequest("getStakeActivation",s),o=(0,b.create)(a,eL(ta));if("error"in o)throw new es(o.error,`failed to get Stake Activation ${e.toBase58()}`);return o.result}async getProgramAccounts(e,t){let{commitment:r,config:n}=eW(t),{encoding:i,...s}=n||{},a=this._buildArgs([e.toBase58()],r,i||"base64",s),o=await this._rpcRequest("getProgramAccounts",a),c=(0,b.array)(tr),l=!0===s.withContext?(0,b.create)(o,eR(c)):(0,b.create)(o,eL(c));if("error"in l)throw new es(l.error,`failed to get accounts owned by program ${e.toBase58()}`);return l.result}async getParsedProgramAccounts(e,t){let{commitment:r,config:n}=eW(t),i=this._buildArgs([e.toBase58()],r,"jsonParsed",n),s=await this._rpcRequest("getProgramAccounts",i),a=(0,b.create)(s,eL((0,b.array)(ts)));if("error"in a)throw new es(a.error,`failed to get accounts owned by program ${e.toBase58()}`);return a.result}async confirmTransaction(e,t){let r,n;if("string"==typeof e)r=e;else{if(e.abortSignal?.aborted)return Promise.reject(e.abortSignal.reason);r=e.signature}try{n=u().decode(r)}catch(e){throw Error("signature must be base58 encoded: "+r)}return(J(64===n.length,"signature has invalid length"),"string"==typeof e)?await this.confirmTransactionUsingLegacyTimeoutStrategy({commitment:t||this.commitment,signature:r}):"lastValidBlockHeight"in e?await this.confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:t||this.commitment,strategy:e}):await this.confirmTransactionUsingDurableNonceStrategy({commitment:t||this.commitment,strategy:e})}getCancellationPromise(e){return new Promise((t,r)=>{null!=e&&(e.aborted?r(e.reason):e.addEventListener("abort",()=>{r(e.reason)}))})}getTransactionConfirmationPromise({commitment:e,signature:t}){let r,n;let i=!1;return{abortConfirmation:()=>{n&&(n(),n=void 0),null!=r&&(this.removeSignatureListener(r),r=void 0)},confirmationPromise:new Promise((s,a)=>{try{r=this.onSignature(t,(e,t)=>{r=void 0,s({__type:G.PROCESSED,response:{context:t,value:e}})},e);let o=new Promise(e=>{null==r?e():n=this._onSubscriptionStateChange(r,t=>{"subscribed"===t&&e()})});(async()=>{if(await o,i)return;let r=await this.getSignatureStatus(t);if(i||null==r)return;let{context:n,value:c}=r;if(null!=c){if(c?.err)a(c.err);else{switch(e){case"confirmed":case"single":case"singleGossip":if("processed"===c.confirmationStatus)return;break;case"finalized":case"max":case"root":if("processed"===c.confirmationStatus||"confirmed"===c.confirmationStatus)return}i=!0,s({__type:G.PROCESSED,response:{context:n,value:c}})}}})()}catch(e){a(e)}})}}async confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:e,strategy:{abortSignal:t,lastValidBlockHeight:r,signature:n}}){let i,s=!1,a=new Promise(t=>{let n=async()=>{try{return await this.getBlockHeight(e)}catch(e){return -1}};(async()=>{let e=await n();if(!s){for(;e<=r;)if(await eo(1e3),s||(e=await n(),s))return;t({__type:G.BLOCKHEIGHT_EXCEEDED})}})()}),{abortConfirmation:o,confirmationPromise:c}=this.getTransactionConfirmationPromise({commitment:e,signature:n}),l=this.getCancellationPromise(t);try{let e=await Promise.race([l,c,a]);if(e.__type===G.PROCESSED)i=e.response;else throw new C(n)}finally{s=!0,o()}return i}async confirmTransactionUsingDurableNonceStrategy({commitment:e,strategy:{abortSignal:t,minContextSlot:r,nonceAccountPubkey:n,nonceValue:i,signature:s}}){let a,o=!1,c=new Promise(t=>{let s=i,a=null,c=async()=>{try{let{context:t,value:i}=await this.getNonceAndContext(n,{commitment:e,minContextSlot:r});return a=t.slot,i?.nonce}catch(e){return s}};(async()=>{if(s=await c(),!o)for(;;){if(i!==s){t({__type:G.NONCE_INVALID,slotInWhichNonceDidAdvance:a});return}if(await eo(2e3),o||(s=await c(),o))return}})()}),{abortConfirmation:l,confirmationPromise:u}=this.getTransactionConfirmationPromise({commitment:e,signature:s}),d=this.getCancellationPromise(t);try{let t=await Promise.race([d,u,c]);if(t.__type===G.PROCESSED)a=t.response;else{let n;for(;;){let e=await this.getSignatureStatus(s);if(null==e)break;if(e.context.slot<(t.slotInWhichNonceDidAdvance??r)){await eo(400);continue}n=e;break}if(n?.value){let t=e||"finalized",{confirmationStatus:r}=n.value;switch(t){case"processed":case"recent":if("processed"!==r&&"confirmed"!==r&&"finalized"!==r)throw new L(s);break;case"confirmed":case"single":case"singleGossip":if("confirmed"!==r&&"finalized"!==r)throw new L(s);break;case"finalized":case"max":case"root":if("finalized"!==r)throw new L(s)}a={context:n.context,value:{err:n.value.err}}}else throw new L(s)}}finally{o=!0,l()}return a}async confirmTransactionUsingLegacyTimeoutStrategy({commitment:e,signature:t}){let r,n;let i=new Promise(t=>{let n=this._confirmTransactionInitialTimeout||6e4;switch(e){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":n=this._confirmTransactionInitialTimeout||3e4}r=setTimeout(()=>t({__type:G.TIMED_OUT,timeoutMs:n}),n)}),{abortConfirmation:s,confirmationPromise:a}=this.getTransactionConfirmationPromise({commitment:e,signature:t});try{let e=await Promise.race([a,i]);if(e.__type===G.PROCESSED)n=e.response;else throw new q(t,e.timeoutMs/1e3)}finally{clearTimeout(r),s()}return n}async getClusterNodes(){let e=await this._rpcRequest("getClusterNodes",[]),t=(0,b.create)(e,eL((0,b.array)(tf)));if("error"in t)throw new es(t.error,"failed to get cluster nodes");return t.result}async getVoteAccounts(e){let t=this._buildArgs([],e),r=await this._rpcRequest("getVoteAccounts",t),n=(0,b.create)(r,tw);if("error"in n)throw new es(n.error,"failed to get vote accounts");return n.result}async getSlot(e){let{commitment:t,config:r}=eW(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getSlot",n),s=(0,b.create)(i,eL((0,b.number)()));if("error"in s)throw new es(s.error,"failed to get slot");return s.result}async getSlotLeader(e){let{commitment:t,config:r}=eW(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getSlotLeader",n),s=(0,b.create)(i,eL((0,b.string)()));if("error"in s)throw new es(s.error,"failed to get slot leader");return s.result}async getSlotLeaders(e,t){let r=await this._rpcRequest("getSlotLeaders",[e,t]),n=(0,b.create)(r,eL((0,b.array)(eP)));if("error"in n)throw new es(n.error,"failed to get slot leaders");return n.result}async getSignatureStatus(e,t){let{context:r,value:n}=await this.getSignatureStatuses([e],t);return J(1===n.length),{context:r,value:n[0]}}async getSignatureStatuses(e,t){let r=[e];t&&r.push(t);let n=await this._rpcRequest("getSignatureStatuses",r),i=(0,b.create)(n,tI);if("error"in i)throw new es(i.error,"failed to get signature status");return i.result}async getTransactionCount(e){let{commitment:t,config:r}=eW(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getTransactionCount",n),s=(0,b.create)(i,eL((0,b.number)()));if("error"in s)throw new es(s.error,"failed to get transaction count");return s.result}async getTotalSupply(e){return(await this.getSupply({commitment:e,excludeNonCirculatingAccountsList:!0})).value.total}async getInflationGovernor(e){let t=this._buildArgs([],e),r=await this._rpcRequest("getInflationGovernor",t),n=(0,b.create)(r,eY);if("error"in n)throw new es(n.error,"failed to get inflation");return n.result}async getInflationReward(e,t,r){let{commitment:n,config:i}=eW(r),s=this._buildArgs([e.map(e=>e.toBase58())],n,void 0,{...i,epoch:null!=t?t:i?.epoch}),a=await this._rpcRequest("getInflationReward",s),o=(0,b.create)(a,eN);if("error"in o)throw new es(o.error,"failed to get inflation reward");return o.result}async getInflationRate(){let e=await this._rpcRequest("getInflationRate",[]),t=(0,b.create)(e,eQ);if("error"in t)throw new es(t.error,"failed to get inflation rate");return t.result}async getEpochInfo(e){let{commitment:t,config:r}=eW(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getEpochInfo",n),s=(0,b.create)(i,e0);if("error"in s)throw new es(s.error,"failed to get epoch info");return s.result}async getEpochSchedule(){let e=await this._rpcRequest("getEpochSchedule",[]),t=(0,b.create)(e,e1);if("error"in t)throw new es(t.error,"failed to get epoch schedule");let r=t.result;return new e_(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){let e=await this._rpcRequest("getLeaderSchedule",[]),t=(0,b.create)(e,e8);if("error"in t)throw new es(t.error,"failed to get leader schedule");return t.result}async getMinimumBalanceForRentExemption(e,t){let r=this._buildArgs([e],t),n=await this._rpcRequest("getMinimumBalanceForRentExemption",r),i=(0,b.create)(n,tA);return"error"in i?(console.warn("Unable to fetch minimum balance for rent exemption"),0):i.result}async getRecentBlockhashAndContext(e){let t=this._buildArgs([],e),r=await this._rpcRequest("getRecentBlockhash",t),n=(0,b.create)(r,tY);if("error"in n)throw new es(n.error,"failed to get recent blockhash");return n.result}async getRecentPerformanceSamples(e){let t=await this._rpcRequest("getRecentPerformanceSamples",e?[e]:[]),r=(0,b.create)(t,t1);if("error"in r)throw new es(r.error,"failed to get recent performance samples");return r.result}async getFeeCalculatorForBlockhash(e,t){let r=this._buildArgs([e],t),n=await this._rpcRequest("getFeeCalculatorForBlockhash",r),i=(0,b.create)(n,t8);if("error"in i)throw new es(i.error,"failed to get fee calculator");let{context:s,value:a}=i.result;return{context:s,value:null!==a?a.feeCalculator:null}}async getFeeForMessage(e,t){let r=B(e.serialize()).toString("base64"),n=this._buildArgs([r],t),i=await this._rpcRequest("getFeeForMessage",n),s=(0,b.create)(i,eR((0,b.nullable)((0,b.number)())));if("error"in s)throw new es(s.error,"failed to get fee for message");if(null===s.result)throw Error("invalid blockhash");return s.result}async getRecentPrioritizationFees(e){let t=e?.lockedWritableAccounts?.map(e=>e.toBase58()),r=t?.length?[t]:[],n=await this._rpcRequest("getRecentPrioritizationFees",r),i=(0,b.create)(n,eZ);if("error"in i)throw new es(i.error,"failed to get recent prioritization fees");return i.result}async getRecentBlockhash(e){try{return(await this.getRecentBlockhashAndContext(e)).value}catch(e){throw Error("failed to get recent blockhash: "+e)}}async getLatestBlockhash(e){try{return(await this.getLatestBlockhashAndContext(e)).value}catch(e){throw Error("failed to get recent blockhash: "+e)}}async getLatestBlockhashAndContext(e){let{commitment:t,config:r}=eW(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getLatestBlockhash",n),s=(0,b.create)(i,tQ);if("error"in s)throw new es(s.error,"failed to get latest blockhash");return s.result}async isBlockhashValid(e,t){let{commitment:r,config:n}=eW(t),i=this._buildArgs([e],r,void 0,n),s=await this._rpcRequest("isBlockhashValid",i),a=(0,b.create)(s,tZ);if("error"in a)throw new es(a.error,"failed to determine if the blockhash `"+e+"`is valid");return a.result}async getVersion(){let e=await this._rpcRequest("getVersion",[]),t=(0,b.create)(e,eL(eV));if("error"in t)throw new es(t.error,"failed to get version");return t.result}async getGenesisHash(){let e=await this._rpcRequest("getGenesisHash",[]),t=(0,b.create)(e,eL((0,b.string)()));if("error"in t)throw new es(t.error,"failed to get genesis hash");return t.result}async getBlock(e,t){let{commitment:r,config:n}=eW(t),i=this._buildArgsAtLeastConfirmed([e],r,void 0,n),s=await this._rpcRequest("getBlock",i);try{switch(n?.transactionDetails){case"accounts":{let e=(0,b.create)(s,t$);if("error"in e)throw e.error;return e.result}case"none":{let e=(0,b.create)(s,tU);if("error"in e)throw e.error;return e.result}default:{let e=(0,b.create)(s,tJ);if("error"in e)throw e.error;let{result:t}=e;return t?{...t,transactions:t.transactions.map(({transaction:e,meta:t,version:r})=>({meta:t,transaction:{...e,message:eK(r,e.message)},version:r}))}:null}}}catch(e){throw new es(e,"failed to get confirmed block")}}async getParsedBlock(e,t){let{commitment:r,config:n}=eW(t),i=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n),s=await this._rpcRequest("getBlock",i);try{switch(n?.transactionDetails){case"accounts":{let e=(0,b.create)(s,tF);if("error"in e)throw e.error;return e.result}case"none":{let e=(0,b.create)(s,tD);if("error"in e)throw e.error;return e.result}default:{let e=(0,b.create)(s,tH);if("error"in e)throw e.error;return e.result}}}catch(e){throw new es(e,"failed to get block")}}async getBlockProduction(e){let t,r;if("string"==typeof e)r=e;else if(e){let{commitment:n,...i}=e;r=n,t=i}let n=this._buildArgs([],r,"base64",t),i=await this._rpcRequest("getBlockProduction",n),s=(0,b.create)(i,eX);if("error"in s)throw new es(s.error,"failed to get block production information");return s.result}async getTransaction(e,t){let{commitment:r,config:n}=eW(t),i=this._buildArgsAtLeastConfirmed([e],r,void 0,n),s=await this._rpcRequest("getTransaction",i),a=(0,b.create)(s,tG);if("error"in a)throw new es(a.error,"failed to get transaction");let o=a.result;return o?{...o,transaction:{...o.transaction,message:eK(o.version,o.transaction.message)}}:o}async getParsedTransaction(e,t){let{commitment:r,config:n}=eW(t),i=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n),s=await this._rpcRequest("getTransaction",i),a=(0,b.create)(s,tX);if("error"in a)throw new es(a.error,"failed to get transaction");return a.result}async getParsedTransactions(e,t){let{commitment:r,config:n}=eW(t),i=e.map(e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n)}));return(await this._rpcBatchRequest(i)).map(e=>{let t=(0,b.create)(e,tX);if("error"in t)throw new es(t.error,"failed to get transactions");return t.result})}async getTransactions(e,t){let{commitment:r,config:n}=eW(t),i=e.map(e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,void 0,n)}));return(await this._rpcBatchRequest(i)).map(e=>{let t=(0,b.create)(e,tG);if("error"in t)throw new es(t.error,"failed to get transactions");let r=t.result;return r?{...r,transaction:{...r.transaction,message:eK(r.version,r.transaction.message)}}:r})}async getConfirmedBlock(e,t){let r=this._buildArgsAtLeastConfirmed([e],t),n=await this._rpcRequest("getConfirmedBlock",r),i=(0,b.create)(n,tj);if("error"in i)throw new es(i.error,"failed to get confirmed block");let s=i.result;if(!s)throw Error("Confirmed block "+e+" not found");let a={...s,transactions:s.transactions.map(({transaction:e,meta:t})=>{let r=new D(e.message);return{meta:t,transaction:{...e,message:r}}})};return{...a,transactions:a.transactions.map(({transaction:e,meta:t})=>({meta:t,transaction:Q.populate(e.message,e.signatures)}))}}async getBlocks(e,t,r){let n=this._buildArgsAtLeastConfirmed(void 0!==t?[e,t]:[e],r),i=await this._rpcRequest("getBlocks",n),s=(0,b.create)(i,eL((0,b.array)((0,b.number)())));if("error"in s)throw new es(s.error,"failed to get blocks");return s.result}async getBlockSignatures(e,t){let r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),n=await this._rpcRequest("getBlock",r),i=(0,b.create)(n,tV);if("error"in i)throw new es(i.error,"failed to get block");let s=i.result;if(!s)throw Error("Block "+e+" not found");return s}async getConfirmedBlockSignatures(e,t){let r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),n=await this._rpcRequest("getConfirmedBlock",r),i=(0,b.create)(n,tV);if("error"in i)throw new es(i.error,"failed to get confirmed block");let s=i.result;if(!s)throw Error("Confirmed block "+e+" not found");return s}async getConfirmedTransaction(e,t){let r=this._buildArgsAtLeastConfirmed([e],t),n=await this._rpcRequest("getConfirmedTransaction",r),i=(0,b.create)(n,tG);if("error"in i)throw new es(i.error,"failed to get transaction");let s=i.result;if(!s)return s;let a=new D(s.transaction.message),o=s.transaction.signatures;return{...s,transaction:Q.populate(a,o)}}async getParsedConfirmedTransaction(e,t){let r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed"),n=await this._rpcRequest("getConfirmedTransaction",r),i=(0,b.create)(n,tX);if("error"in i)throw new es(i.error,"failed to get confirmed transaction");return i.result}async getParsedConfirmedTransactions(e,t){let r=e.map(e=>({methodName:"getConfirmedTransaction",args:this._buildArgsAtLeastConfirmed([e],t,"jsonParsed")}));return(await this._rpcBatchRequest(r)).map(e=>{let t=(0,b.create)(e,tX);if("error"in t)throw new es(t.error,"failed to get confirmed transactions");return t.result})}async getConfirmedSignaturesForAddress(e,t,r){let n={},i=await this.getFirstAvailableBlock();for(;!("until"in n)&&!(--t<=0)&&!(t<i);)try{let e=await this.getConfirmedBlockSignatures(t,"finalized");e.signatures.length>0&&(n.until=e.signatures[e.signatures.length-1].toString())}catch(e){if(e instanceof Error&&e.message.includes("skipped"))continue;throw e}let s=await this.getSlot("finalized");for(;!("before"in n)&&!(++r>s);)try{let e=await this.getConfirmedBlockSignatures(r);e.signatures.length>0&&(n.before=e.signatures[e.signatures.length-1].toString())}catch(e){if(e instanceof Error&&e.message.includes("skipped"))continue;throw e}return(await this.getConfirmedSignaturesForAddress2(e,n)).map(e=>e.signature)}async getConfirmedSignaturesForAddress2(e,t,r){let n=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),i=await this._rpcRequest("getConfirmedSignaturesForAddress2",n),s=(0,b.create)(i,to);if("error"in s)throw new es(s.error,"failed to get confirmed signatures for address");return s.result}async getSignaturesForAddress(e,t,r){let n=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),i=await this._rpcRequest("getSignaturesForAddress",n),s=(0,b.create)(i,tc);if("error"in s)throw new es(s.error,"failed to get signatures for address");return s.result}async getAddressLookupTable(e,t){let{context:r,value:n}=await this.getAccountInfoAndContext(e,t),i=null;return null!==n&&(i=new ev({key:e,state:ev.deserialize(n.data)})),{context:r,value:i}}async getNonceAndContext(e,t){let{context:r,value:n}=await this.getAccountInfoAndContext(e,t),i=null;return null!==n&&(i=eh.fromAccountData(n.data)),{context:r,value:i}}async getNonce(e,t){return await this.getNonceAndContext(e,t).then(e=>e.value).catch(t=>{throw Error("failed to get nonce for account "+e.toBase58()+": "+t)})}async requestAirdrop(e,t){let r=await this._rpcRequest("requestAirdrop",[e.toBase58(),t]),n=(0,b.create)(r,t2);if("error"in n)throw new es(n.error,`airdrop to ${e.toBase58()} failed`);return n.result}async _blockhashWithExpiryBlockHeight(e){if(!e){for(;this._pollingBlockhash;)await eo(100);let e=Date.now()-this._blockhashInfo.lastFetch;if(null!==this._blockhashInfo.latestBlockhash&&!(e>=3e4))return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{let e=Date.now(),t=this._blockhashInfo.latestBlockhash,r=t?t.blockhash:null;for(let e=0;e<50;e++){let e=await this.getLatestBlockhash("finalized");if(r!==e.blockhash)return this._blockhashInfo={latestBlockhash:e,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},e;await eo(200)}throw Error(`Unable to obtain a new blockhash after ${Date.now()-e}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(e){let{commitment:t,config:r}=eW(e),n=this._buildArgs([],t,"base64",r),i=await this._rpcRequest("getStakeMinimumDelegation",n),s=(0,b.create)(i,eR((0,b.number)()));if("error"in s)throw new es(s.error,"failed to get stake minimum delegation");return s.result}async simulateTransaction(e,t,r){let n;if("message"in e){let n=e.serialize(),i=s.Buffer.from(n).toString("base64");if(Array.isArray(t)||void 0!==r)throw Error("Invalid arguments");let a=t||{};a.encoding="base64","commitment"in a||(a.commitment=this.commitment);let o=await this._rpcRequest("simulateTransaction",[i,a]),c=(0,b.create)(o,eG);if("error"in c)throw Error("failed to simulate transaction: "+c.error.message);return c.result}if(e instanceof Q?((n=new Q).feePayer=e.feePayer,n.instructions=e.instructions,n.nonceInfo=e.nonceInfo,n.signatures=e.signatures):(n=Q.populate(e))._message=n._json=void 0,void 0!==t&&!Array.isArray(t))throw Error("Invalid arguments");if(n.nonceInfo&&t)n.sign(...t);else{let e=this._disableBlockhashCaching;for(;;){let r=await this._blockhashWithExpiryBlockHeight(e);if(n.lastValidBlockHeight=r.lastValidBlockHeight,n.recentBlockhash=r.blockhash,!t)break;if(n.sign(...t),!n.signature)throw Error("!signature");let i=n.signature.toString("base64");if(this._blockhashInfo.simulatedSignatures.includes(i)||this._blockhashInfo.transactionSignatures.includes(i))e=!0;else{this._blockhashInfo.simulatedSignatures.push(i);break}}}let i=n._compile(),a=i.serialize(),o=n._serialize(a).toString("base64"),c={encoding:"base64",commitment:this.commitment};if(r){let e=(Array.isArray(r)?r:i.nonProgramIds()).map(e=>e.toBase58());c.accounts={encoding:"base64",addresses:e}}t&&(c.sigVerify=!0);let l=await this._rpcRequest("simulateTransaction",[o,c]),u=(0,b.create)(l,eG);if("error"in u){let e;if("data"in u.error&&(e=u.error.data.logs)&&Array.isArray(e)){let t="\n    ",r=t+e.join(t);console.error(u.error.message,r)}throw new ei({action:"simulate",signature:"",transactionMessage:u.error.message,logs:e})}return u.result}async sendTransaction(e,t,r){if("version"in e){if(t&&Array.isArray(t))throw Error("Invalid arguments");let r=e.serialize();return await this.sendRawTransaction(r,t)}if(void 0===t||!Array.isArray(t))throw Error("Invalid arguments");if(e.nonceInfo)e.sign(...t);else{let r=this._disableBlockhashCaching;for(;;){let n=await this._blockhashWithExpiryBlockHeight(r);if(e.lastValidBlockHeight=n.lastValidBlockHeight,e.recentBlockhash=n.blockhash,e.sign(...t),!e.signature)throw Error("!signature");let i=e.signature.toString("base64");if(this._blockhashInfo.transactionSignatures.includes(i))r=!0;else{this._blockhashInfo.transactionSignatures.push(i);break}}}let n=e.serialize();return await this.sendRawTransaction(n,r)}async sendRawTransaction(e,t){let r=B(e).toString("base64");return await this.sendEncodedTransaction(r,t)}async sendEncodedTransaction(e,t){let r={encoding:"base64"},n=t&&t.skipPreflight,i=!0===n?"processed":t&&t.preflightCommitment||this.commitment;t&&null!=t.maxRetries&&(r.maxRetries=t.maxRetries),t&&null!=t.minContextSlot&&(r.minContextSlot=t.minContextSlot),n&&(r.skipPreflight=n),i&&(r.preflightCommitment=i);let s=await this._rpcRequest("sendTransaction",[e,r]),a=(0,b.create)(s,t5);if("error"in a){let e;throw"data"in a.error&&(e=a.error.data.logs),new ei({action:n?"send":"simulate",signature:"",transactionMessage:a.error.message,logs:e})}return a.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval(()=>{(async()=>{try{await this._rpcWebSocket.notify("ping")}catch{}})()},5e3),this._updateSubscriptions()}_wsOnError(e){this._rpcWebSocketConnected=!1,console.error("ws error:",e.message)}_wsOnClose(e){if(this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration=(this._rpcWebSocketGeneration+1)%Number.MAX_SAFE_INTEGER,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3===e){this._updateSubscriptions();return}this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach(([e,t])=>{this._setSubscription(e,{...t,state:"pending"})})}_setSubscription(e,t){let r=this._subscriptionsByHash[e]?.state;if(this._subscriptionsByHash[e]=t,r!==t.state){let r=this._subscriptionStateChangeCallbacksByHash[e];r&&r.forEach(e=>{try{e(t.state)}catch{}})}}_onSubscriptionStateChange(e,t){let r=this._subscriptionHashByClientSubscriptionId[e];if(null==r)return()=>{};let n=this._subscriptionStateChangeCallbacksByHash[r]||=new Set;return n.add(t),()=>{n.delete(t),0===n.size&&delete this._subscriptionStateChangeCallbacksByHash[r]}}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length){this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout(()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(e){e instanceof Error&&console.log(`Error when closing socket connection: ${e.message}`)}},500));return}if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected){this._rpcWebSocket.connect();return}let e=this._rpcWebSocketGeneration,t=()=>e===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map(async e=>{let r=this._subscriptionsByHash[e];if(void 0!==r)switch(r.state){case"pending":case"unsubscribed":if(0===r.callbacks.size){delete this._subscriptionsByHash[e],"unsubscribed"===r.state&&delete this._subscriptionCallbacksByServerSubscriptionId[r.serverSubscriptionId],await this._updateSubscriptions();return}await (async()=>{let{args:n,method:i}=r;try{this._setSubscription(e,{...r,state:"subscribing"});let t=await this._rpcWebSocket.call(i,n);this._setSubscription(e,{...r,serverSubscriptionId:t,state:"subscribed"}),this._subscriptionCallbacksByServerSubscriptionId[t]=r.callbacks,await this._updateSubscriptions()}catch(s){if(s instanceof Error&&console.error(`${i} error for argument`,n,s.message),!t())return;this._setSubscription(e,{...r,state:"pending"}),await this._updateSubscriptions()}})();break;case"subscribed":0===r.callbacks.size&&await (async()=>{let{serverSubscriptionId:n,unsubscribeMethod:i}=r;if(this._subscriptionsAutoDisposedByRpc.has(n))this._subscriptionsAutoDisposedByRpc.delete(n);else{this._setSubscription(e,{...r,state:"unsubscribing"}),this._setSubscription(e,{...r,state:"unsubscribing"});try{await this._rpcWebSocket.call(i,[n])}catch(n){if(n instanceof Error&&console.error(`${i} error:`,n.message),!t())return;this._setSubscription(e,{...r,state:"subscribed"}),await this._updateSubscriptions();return}}this._setSubscription(e,{...r,state:"unsubscribed"}),await this._updateSubscriptions()})()}}))}_handleServerNotification(e,t){let r=this._subscriptionCallbacksByServerSubscriptionId[e];void 0!==r&&r.forEach(e=>{try{e(...t)}catch(e){console.error(e)}})}_wsOnAccountNotification(e){let{result:t,subscription:r}=(0,b.create)(e,tl);this._handleServerNotification(r,[t.value,t.context])}_makeSubscription(e,t){let r=this._nextClientSubscriptionId++,n=ew([e.method,t]),i=this._subscriptionsByHash[n];return void 0===i?this._subscriptionsByHash[n]={...e,args:t,callbacks:new Set([e.callback]),state:"pending"}:i.callbacks.add(e.callback),this._subscriptionHashByClientSubscriptionId[r]=n,this._subscriptionDisposeFunctionsByClientSubscriptionId[r]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[r],delete this._subscriptionHashByClientSubscriptionId[r];let t=this._subscriptionsByHash[n];J(void 0!==t,`Could not find a \`Subscription\` when tearing down client subscription #${r}`),t.callbacks.delete(e.callback),await this._updateSubscriptions()},this._updateSubscriptions(),r}onAccountChange(e,t,r){let n=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64");return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},n)}async removeAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"account change")}_wsOnProgramAccountNotification(e){let{result:t,subscription:r}=(0,b.create)(e,td);this._handleServerNotification(r,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(e,t,r,n){let i=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64",n?{filters:n}:void 0);return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},i)}async removeProgramAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"program account change")}onLogs(e,t,r){let n=this._buildArgs(["object"==typeof e?{mentions:[e.toString()]}:e],r||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},n)}async removeOnLogsListener(e){await this._unsubscribeClientSubscription(e,"logs")}_wsOnLogsNotification(e){let{result:t,subscription:r}=(0,b.create)(e,t6);this._handleServerNotification(r,[t.value,t.context])}_wsOnSlotNotification(e){let{result:t,subscription:r}=(0,b.create)(e,tg);this._handleServerNotification(r,[t])}onSlotChange(e){return this._makeSubscription({callback:e,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(e){await this._unsubscribeClientSubscription(e,"slot change")}_wsOnSlotUpdatesNotification(e){let{result:t,subscription:r}=(0,b.create)(e,tb);this._handleServerNotification(r,[t])}onSlotUpdate(e){return this._makeSubscription({callback:e,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(e){await this._unsubscribeClientSubscription(e,"slot update")}async _unsubscribeClientSubscription(e,t){let r=this._subscriptionDisposeFunctionsByClientSubscriptionId[e];r?await r():console.warn(`Ignored unsubscribe request because an active subscription with id \`${e}\` for '${t}' events could not be found.`)}_buildArgs(e,t,r,n){let i=t||this._commitment;if(i||r||n){let t={};r&&(t.encoding=r),i&&(t.commitment=i),n&&(t=Object.assign(t,n)),e.push(t)}return e}_buildArgsAtLeastConfirmed(e,t,r,n){let i=t||this._commitment;if(i&&!["confirmed","finalized"].includes(i))throw Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(e,t,r,n)}_wsOnSignatureNotification(e){let{result:t,subscription:r}=(0,b.create)(e,tm);"receivedSignature"!==t.value&&this._subscriptionsAutoDisposedByRpc.add(r),this._handleServerNotification(r,"receivedSignature"===t.value?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(e,t,r){let n=this._buildArgs([e],r||this._commitment||"finalized"),i=this._makeSubscription({callback:(e,r)=>{if("status"===e.type){t(e.result,r);try{this.removeSignatureListener(i)}catch(e){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},n);return i}onSignatureWithOptions(e,t,r){let{commitment:n,...i}={...r,commitment:r&&r.commitment||this._commitment||"finalized"},s=this._buildArgs([e],n,void 0,i),a=this._makeSubscription({callback:(e,r)=>{t(e,r);try{this.removeSignatureListener(a)}catch(e){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},s);return a}async removeSignatureListener(e){await this._unsubscribeClientSubscription(e,"signature result")}_wsOnRootNotification(e){let{result:t,subscription:r}=(0,b.create)(e,ty);this._handleServerNotification(r,[t])}onRootChange(e){return this._makeSubscription({callback:e,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(e){await this._unsubscribeClientSubscription(e,"root change")}}class t7{constructor(e){this._keypair=void 0,this._keypair=e??S()}static generate(){return new t7(S())}static fromSecretKey(e,t){if(64!==e.byteLength)throw Error("bad secret key size");let r=e.slice(32,64);if(!t||!t.skipValidation){let t=_(e.slice(0,32));for(let e=0;e<32;e++)if(r[e]!==t[e])throw Error("provided secretKey is invalid")}return new t7({publicKey:r,secretKey:e})}static fromSeed(e){let t=_(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),new t7({publicKey:t,secretKey:r})}get publicKey(){return new T(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}}let re=Object.freeze({CreateLookupTable:{index:0,layout:g.n_([g.Jq("instruction"),ep("recentSlot"),g.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:g.n_([g.Jq("instruction")])},ExtendLookupTable:{index:2,layout:g.n_([g.Jq("instruction"),ep(),g.A9(z(),g.cv(g.Jq(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:g.n_([g.Jq("instruction")])},CloseLookupTable:{index:4,layout:g.n_([g.Jq("instruction")])}});class rt{constructor(){}static createLookupTable(e){let[t,r]=T.findProgramAddressSync([e.authority.toBuffer(),(0,p.k$)(BigInt(e.recentSlot),8)],this.programId),n=ec(re.CreateLookupTable,{recentSlot:BigInt(e.recentSlot),bumpSeed:r}),i=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:em.programId,isSigner:!1,isWritable:!1}];return[new Y({programId:this.programId,keys:i,data:n}),t]}static freezeLookupTable(e){let t=ec(re.FreezeLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new Y({programId:this.programId,keys:r,data:t})}static extendLookupTable(e){let t=ec(re.ExtendLookupTable,{addresses:e.addresses.map(e=>e.toBytes())}),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return e.payer&&r.push({pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:em.programId,isSigner:!1,isWritable:!1}),new Y({programId:this.programId,keys:r,data:t})}static deactivateLookupTable(e){let t=ec(re.DeactivateLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new Y({programId:this.programId,keys:r,data:t})}static closeLookupTable(e){let t=ec(re.CloseLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.recipient,isSigner:!1,isWritable:!0}];return new Y({programId:this.programId,keys:r,data:t})}}rt.programId=new T("AddressLookupTab1e1111111111111111111111111");let rr=Object.freeze({RequestUnits:{index:0,layout:g.n_([g.u8("instruction"),g.Jq("units"),g.Jq("additionalFee")])},RequestHeapFrame:{index:1,layout:g.n_([g.u8("instruction"),g.Jq("bytes")])},SetComputeUnitLimit:{index:2,layout:g.n_([g.u8("instruction"),g.Jq("units")])},SetComputeUnitPrice:{index:3,layout:g.n_([g.u8("instruction"),ep("microLamports")])}});class rn{constructor(){}static requestUnits(e){let t=ec(rr.RequestUnits,e);return new Y({keys:[],programId:this.programId,data:t})}static requestHeapFrame(e){let t=ec(rr.RequestHeapFrame,e);return new Y({keys:[],programId:this.programId,data:t})}static setComputeUnitLimit(e){let t=ec(rr.SetComputeUnitLimit,e);return new Y({keys:[],programId:this.programId,data:t})}static setComputeUnitPrice(e){let t=ec(rr.SetComputeUnitPrice,{microLamports:BigInt(e.microLamports)});return new Y({keys:[],programId:this.programId,data:t})}}rn.programId=new T("ComputeBudget111111111111111111111111111111");let ri=g.n_([g.u8("numSignatures"),g.u8("padding"),g.KB("signatureOffset"),g.KB("signatureInstructionIndex"),g.KB("publicKeyOffset"),g.KB("publicKeyInstructionIndex"),g.KB("messageDataOffset"),g.KB("messageDataSize"),g.KB("messageInstructionIndex")]);class rs{constructor(){}static createInstructionWithPublicKey(e){let{publicKey:t,message:r,signature:n,instructionIndex:i}=e;J(32===t.length,`Public Key must be 32 bytes but received ${t.length} bytes`),J(64===n.length,`Signature must be 64 bytes but received ${n.length} bytes`);let a=ri.span,o=a+t.length,c=o+n.length,l=s.Buffer.alloc(c+r.length),u=null==i?65535:i;return ri.encode({numSignatures:1,padding:0,signatureOffset:o,signatureInstructionIndex:u,publicKeyOffset:a,publicKeyInstructionIndex:u,messageDataOffset:c,messageDataSize:r.length,messageInstructionIndex:u},l),l.fill(t,a),l.fill(n,o),l.fill(r,c),new Y({keys:[],programId:rs.programId,data:l})}static createInstructionWithPrivateKey(e){let{privateKey:t,message:r,instructionIndex:n}=e;J(64===t.length,`Private key must be 64 bytes but received ${t.length} bytes`);try{let e=t7.fromSecretKey(t),i=e.publicKey.toBytes(),s=A(r,e.secretKey);return this.createInstructionWithPublicKey({publicKey:i,message:r,signature:s,instructionIndex:n})}catch(e){throw Error(`Error creating instruction; ${e}`)}}}rs.programId=new T("Ed25519SigVerify111111111111111111111111111");let ra=(e,t)=>{let r=w.kA.sign(e,t);return[r.toCompactRawBytes(),r.recovery]};w.kA.utils.isValidPrivateKey;let ro=w.kA.getPublicKey,rc=g.n_([g.u8("numSignatures"),g.KB("signatureOffset"),g.u8("signatureInstructionIndex"),g.KB("ethAddressOffset"),g.u8("ethAddressInstructionIndex"),g.KB("messageDataOffset"),g.KB("messageDataSize"),g.u8("messageInstructionIndex"),g.Ik(20,"ethAddress"),g.Ik(64,"signature"),g.u8("recoveryId")]);class rl{constructor(){}static publicKeyToEthAddress(e){J(64===e.length,`Public key must be 64 bytes but received ${e.length} bytes`);try{return s.Buffer.from((0,k.fr)(B(e))).slice(-20)}catch(e){throw Error(`Error constructing Ethereum address: ${e}`)}}static createInstructionWithPublicKey(e){let{publicKey:t,message:r,signature:n,recoveryId:i,instructionIndex:s}=e;return rl.createInstructionWithEthAddress({ethAddress:rl.publicKeyToEthAddress(t),message:r,signature:n,recoveryId:i,instructionIndex:s})}static createInstructionWithEthAddress(e){let t;let{ethAddress:r,message:n,signature:i,recoveryId:a,instructionIndex:o=0}=e;J(20===(t="string"==typeof r?r.startsWith("0x")?s.Buffer.from(r.substr(2),"hex"):s.Buffer.from(r,"hex"):r).length,`Address must be 20 bytes but received ${t.length} bytes`);let c=12+t.length,l=c+i.length+1,u=s.Buffer.alloc(rc.span+n.length);return rc.encode({numSignatures:1,signatureOffset:c,signatureInstructionIndex:o,ethAddressOffset:12,ethAddressInstructionIndex:o,messageDataOffset:l,messageDataSize:n.length,messageInstructionIndex:o,signature:B(i),ethAddress:B(t),recoveryId:a},u),u.fill(B(n),rc.span),new Y({keys:[],programId:rl.programId,data:u})}static createInstructionWithPrivateKey(e){let{privateKey:t,message:r,instructionIndex:n}=e;J(32===t.length,`Private key must be 32 bytes but received ${t.length} bytes`);try{let e=B(t),i=ro(e,!1).slice(1),a=s.Buffer.from((0,k.fr)(B(r))),[o,c]=ra(a,e);return this.createInstructionWithPublicKey({publicKey:i,message:r,signature:o,recoveryId:c,instructionIndex:n})}catch(e){throw Error(`Error creating instruction; ${e}`)}}}rl.programId=new T("KeccakSecp256k11111111111111111111111111111");let ru=new T("StakeConfig11111111111111111111111111111111");class rd{constructor(e,t,r){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=e,this.epoch=t,this.custodian=r}}rd.default=new rd(0,0,T.default);let rh=Object.freeze({Initialize:{index:0,layout:g.n_([g.Jq("instruction"),((e="authorized")=>g.n_([z("staker"),z("withdrawer")],e))(),((e="lockup")=>g.n_([g.gM("unixTimestamp"),g.gM("epoch"),z("custodian")],e))()])},Authorize:{index:1,layout:g.n_([g.Jq("instruction"),z("newAuthorized"),g.Jq("stakeAuthorizationType")])},Delegate:{index:2,layout:g.n_([g.Jq("instruction")])},Split:{index:3,layout:g.n_([g.Jq("instruction"),g.gM("lamports")])},Withdraw:{index:4,layout:g.n_([g.Jq("instruction"),g.gM("lamports")])},Deactivate:{index:5,layout:g.n_([g.Jq("instruction")])},Merge:{index:7,layout:g.n_([g.Jq("instruction")])},AuthorizeWithSeed:{index:8,layout:g.n_([g.Jq("instruction"),z("newAuthorized"),g.Jq("stakeAuthorizationType"),O("authoritySeed"),z("authorityOwner")])}});Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class rg{constructor(){}static initialize(e){let{stakePubkey:t,authorized:r,lockup:n}=e,i=n||rd.default,s=ec(rh.Initialize,{authorized:{staker:B(r.staker.toBuffer()),withdrawer:B(r.withdrawer.toBuffer())},lockup:{unixTimestamp:i.unixTimestamp,epoch:i.epoch,custodian:B(i.custodian.toBuffer())}});return new Y({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:er,isSigner:!1,isWritable:!1}],programId:this.programId,data:s})}static createAccountWithSeed(e){let t=new Q;t.add(em.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:this.space,programId:this.programId}));let{stakePubkey:r,authorized:n,lockup:i}=e;return t.add(this.initialize({stakePubkey:r,authorized:n,lockup:i}))}static createAccount(e){let t=new Q;t.add(em.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));let{stakePubkey:r,authorized:n,lockup:i}=e;return t.add(this.initialize({stakePubkey:r,authorized:n,lockup:i}))}static delegate(e){let{stakePubkey:t,authorizedPubkey:r,votePubkey:n}=e,i=ec(rh.Delegate);return new Q().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!1},{pubkey:ee,isSigner:!1,isWritable:!1},{pubkey:en,isSigner:!1,isWritable:!1},{pubkey:ru,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static authorize(e){let{stakePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:n,stakeAuthorizationType:i,custodianPubkey:s}=e,a=ec(rh.Authorize,{newAuthorized:B(n.toBuffer()),stakeAuthorizationType:i.index}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ee,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return s&&o.push({pubkey:s,isSigner:!0,isWritable:!1}),new Q().add({keys:o,programId:this.programId,data:a})}static authorizeWithSeed(e){let{stakePubkey:t,authorityBase:r,authoritySeed:n,authorityOwner:i,newAuthorizedPubkey:s,stakeAuthorizationType:a,custodianPubkey:o}=e,c=ec(rh.AuthorizeWithSeed,{newAuthorized:B(s.toBuffer()),stakeAuthorizationType:a.index,authoritySeed:n,authorityOwner:B(i.toBuffer())}),l=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1},{pubkey:ee,isSigner:!1,isWritable:!1}];return o&&l.push({pubkey:o,isSigner:!0,isWritable:!1}),new Q().add({keys:l,programId:this.programId,data:c})}static splitInstruction(e){let{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:n,lamports:i}=e,s=ec(rh.Split,{lamports:i});return new Y({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static split(e,t){let r=new Q;return r.add(em.createAccount({fromPubkey:e.authorizedPubkey,newAccountPubkey:e.splitStakePubkey,lamports:t,space:this.space,programId:this.programId})),r.add(this.splitInstruction(e))}static splitWithSeed(e,t){let{stakePubkey:r,authorizedPubkey:n,splitStakePubkey:i,basePubkey:s,seed:a,lamports:o}=e,c=new Q;return c.add(em.allocate({accountPubkey:i,basePubkey:s,seed:a,space:this.space,programId:this.programId})),t&&t>0&&c.add(em.transfer({fromPubkey:e.authorizedPubkey,toPubkey:i,lamports:t})),c.add(this.splitInstruction({stakePubkey:r,authorizedPubkey:n,splitStakePubkey:i,lamports:o}))}static merge(e){let{stakePubkey:t,sourceStakePubKey:r,authorizedPubkey:n}=e,i=ec(rh.Merge);return new Q().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:ee,isSigner:!1,isWritable:!1},{pubkey:en,isSigner:!1,isWritable:!1},{pubkey:n,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static withdraw(e){let{stakePubkey:t,authorizedPubkey:r,toPubkey:n,lamports:i,custodianPubkey:s}=e,a=ec(rh.Withdraw,{lamports:i}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:ee,isSigner:!1,isWritable:!1},{pubkey:en,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return s&&o.push({pubkey:s,isSigner:!0,isWritable:!1}),new Q().add({keys:o,programId:this.programId,data:a})}static deactivate(e){let{stakePubkey:t,authorizedPubkey:r}=e,n=ec(rh.Deactivate);return new Q().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ee,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}}rg.programId=new T("Stake11111111111111111111111111111111111111"),rg.space=200;let rp=Object.freeze({InitializeAccount:{index:0,layout:g.n_([g.Jq("instruction"),((e="voteInit")=>g.n_([z("nodePubkey"),z("authorizedVoter"),z("authorizedWithdrawer"),g.u8("commission")],e))()])},Authorize:{index:1,layout:g.n_([g.Jq("instruction"),z("newAuthorized"),g.Jq("voteAuthorizationType")])},Withdraw:{index:3,layout:g.n_([g.Jq("instruction"),g.gM("lamports")])},UpdateValidatorIdentity:{index:4,layout:g.n_([g.Jq("instruction")])},AuthorizeWithSeed:{index:10,layout:g.n_([g.Jq("instruction"),((e="voteAuthorizeWithSeedArgs")=>g.n_([g.Jq("voteAuthorizationType"),z("currentAuthorityDerivedKeyOwnerPubkey"),O("currentAuthorityDerivedKeySeed"),z("newAuthorized")],e))()])}});Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class rb{constructor(){}static initializeAccount(e){let{votePubkey:t,nodePubkey:r,voteInit:n}=e,i=ec(rp.InitializeAccount,{voteInit:{nodePubkey:B(n.nodePubkey.toBuffer()),authorizedVoter:B(n.authorizedVoter.toBuffer()),authorizedWithdrawer:B(n.authorizedWithdrawer.toBuffer()),commission:n.commission}});return new Y({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:er,isSigner:!1,isWritable:!1},{pubkey:ee,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static createAccount(e){let t=new Q;return t.add(em.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.votePubkey,lamports:e.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:e.votePubkey,nodePubkey:e.voteInit.nodePubkey,voteInit:e.voteInit}))}static authorize(e){let{votePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:n,voteAuthorizationType:i}=e,s=ec(rp.Authorize,{newAuthorized:B(n.toBuffer()),voteAuthorizationType:i.index});return new Q().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ee,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static authorizeWithSeed(e){let{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:r,currentAuthorityDerivedKeySeed:n,newAuthorizedPubkey:i,voteAuthorizationType:s,votePubkey:a}=e,o=ec(rp.AuthorizeWithSeed,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:B(r.toBuffer()),currentAuthorityDerivedKeySeed:n,newAuthorized:B(i.toBuffer()),voteAuthorizationType:s.index}});return new Q().add({keys:[{pubkey:a,isSigner:!1,isWritable:!0},{pubkey:ee,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!0,isWritable:!1}],programId:this.programId,data:o})}static withdraw(e){let{votePubkey:t,authorizedWithdrawerPubkey:r,lamports:n,toPubkey:i}=e,s=ec(rp.Withdraw,{lamports:n});return new Q().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static safeWithdraw(e,t,r){if(e.lamports>t-r)throw Error("Withdraw will leave vote account with insufficient funds.");return rb.withdraw(e)}static updateValidatorIdentity(e){let{votePubkey:t,authorizedWithdrawerPubkey:r,nodePubkey:n}=e,i=ec(rp.UpdateValidatorIdentity);return new Q().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!0,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}}rb.programId=new T("Vote111111111111111111111111111111111111111"),rb.space=3762,new T("Va1idator1nfo111111111111111111111111111111"),(0,b.type)({name:(0,b.string)(),website:(0,b.optional)((0,b.string)()),details:(0,b.optional)((0,b.string)()),keybaseUsername:(0,b.optional)((0,b.string)())}),new T("Vote111111111111111111111111111111111111111"),g.n_([z("nodePubkey"),z("authorizedWithdrawer"),g.u8("commission"),g._O(),g.A9(g.n_([g._O("slot"),g.Jq("confirmationCount")]),g.cv(g.Jq(),-8),"votes"),g.u8("rootSlotValid"),g._O("rootSlot"),g._O(),g.A9(g.n_([g._O("epoch"),z("authorizedVoter")]),g.cv(g.Jq(),-8),"authorizedVoters"),g.n_([g.A9(g.n_([z("authorizedPubkey"),g._O("epochOfLastAuthorizedSwitch"),g._O("targetEpoch")]),32,"buf"),g._O("idx"),g.u8("isEmpty")],"priorVoters"),g._O(),g.A9(g.n_([g._O("epoch"),g._O("credits"),g._O("prevCredits")]),g.cv(g.Jq(),-8),"epochCredits"),g.n_([g._O("slot"),g._O("timestamp")],"lastTimestamp")]);let rm={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function ry(e,t){let r=!1===t?"http":"https";if(!e)return rm[r].devnet;let n=rm[r][e];if(!n)throw Error(`Unknown ${r} cluster: ${e}`);return n}}}]);